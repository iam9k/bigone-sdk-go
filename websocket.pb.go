// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.1
// source: websocket.proto

package bigone

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BusinessUnit int32

const (
	BusinessUnit_SPOT   BusinessUnit = 0
	BusinessUnit_MARGIN BusinessUnit = 1
)

// Enum value maps for BusinessUnit.
var (
	BusinessUnit_name = map[int32]string{
		0: "SPOT",
		1: "MARGIN",
	}
	BusinessUnit_value = map[string]int32{
		"SPOT":   0,
		"MARGIN": 1,
	}
)

func (x BusinessUnit) Enum() *BusinessUnit {
	p := new(BusinessUnit)
	*p = x
	return p
}

func (x BusinessUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BusinessUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_websocket_proto_enumTypes[0].Descriptor()
}

func (BusinessUnit) Type() protoreflect.EnumType {
	return &file_websocket_proto_enumTypes[0]
}

func (x BusinessUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BusinessUnit.Descriptor instead.
func (BusinessUnit) EnumDescriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{0}
}

type FlashExchangeOrder_Status int32

const (
	FlashExchangeOrder_UNSPECIFIED FlashExchangeOrder_Status = 0
	FlashExchangeOrder_COMPLETED   FlashExchangeOrder_Status = 1
)

// Enum value maps for FlashExchangeOrder_Status.
var (
	FlashExchangeOrder_Status_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "COMPLETED",
	}
	FlashExchangeOrder_Status_value = map[string]int32{
		"UNSPECIFIED": 0,
		"COMPLETED":   1,
	}
)

func (x FlashExchangeOrder_Status) Enum() *FlashExchangeOrder_Status {
	p := new(FlashExchangeOrder_Status)
	*p = x
	return p
}

func (x FlashExchangeOrder_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlashExchangeOrder_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_websocket_proto_enumTypes[1].Descriptor()
}

func (FlashExchangeOrder_Status) Type() protoreflect.EnumType {
	return &file_websocket_proto_enumTypes[1]
}

func (x FlashExchangeOrder_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FlashExchangeOrder_Status.Descriptor instead.
func (FlashExchangeOrder_Status) EnumDescriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{4, 0}
}

type Order_Side int32

const (
	Order_BID Order_Side = 0
	Order_ASK Order_Side = 1
)

// Enum value maps for Order_Side.
var (
	Order_Side_name = map[int32]string{
		0: "BID",
		1: "ASK",
	}
	Order_Side_value = map[string]int32{
		"BID": 0,
		"ASK": 1,
	}
)

func (x Order_Side) Enum() *Order_Side {
	p := new(Order_Side)
	*p = x
	return p
}

func (x Order_Side) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Order_Side) Descriptor() protoreflect.EnumDescriptor {
	return file_websocket_proto_enumTypes[2].Descriptor()
}

func (Order_Side) Type() protoreflect.EnumType {
	return &file_websocket_proto_enumTypes[2]
}

func (x Order_Side) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Order_Side.Descriptor instead.
func (Order_Side) EnumDescriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{18, 0}
}

type Order_State int32

const (
	Order_PENDING   Order_State = 0
	Order_FILLED    Order_State = 1
	Order_CANCELLED Order_State = 2
	Order_FIRED     Order_State = 3
)

// Enum value maps for Order_State.
var (
	Order_State_name = map[int32]string{
		0: "PENDING",
		1: "FILLED",
		2: "CANCELLED",
		3: "FIRED",
	}
	Order_State_value = map[string]int32{
		"PENDING":   0,
		"FILLED":    1,
		"CANCELLED": 2,
		"FIRED":     3,
	}
)

func (x Order_State) Enum() *Order_State {
	p := new(Order_State)
	*p = x
	return p
}

func (x Order_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Order_State) Descriptor() protoreflect.EnumDescriptor {
	return file_websocket_proto_enumTypes[3].Descriptor()
}

func (Order_State) Type() protoreflect.EnumType {
	return &file_websocket_proto_enumTypes[3]
}

func (x Order_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Order_State.Descriptor instead.
func (Order_State) EnumDescriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{18, 1}
}

type Order_Type int32

const (
	Order_LIMIT       Order_Type = 0
	Order_MARKET      Order_Type = 1
	Order_STOP_LIMIT  Order_Type = 2
	Order_STOP_MARKET Order_Type = 3
)

// Enum value maps for Order_Type.
var (
	Order_Type_name = map[int32]string{
		0: "LIMIT",
		1: "MARKET",
		2: "STOP_LIMIT",
		3: "STOP_MARKET",
	}
	Order_Type_value = map[string]int32{
		"LIMIT":       0,
		"MARKET":      1,
		"STOP_LIMIT":  2,
		"STOP_MARKET": 3,
	}
)

func (x Order_Type) Enum() *Order_Type {
	p := new(Order_Type)
	*p = x
	return p
}

func (x Order_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Order_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_websocket_proto_enumTypes[4].Descriptor()
}

func (Order_Type) Type() protoreflect.EnumType {
	return &file_websocket_proto_enumTypes[4]
}

func (x Order_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Order_Type.Descriptor instead.
func (Order_Type) EnumDescriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{18, 2}
}

type Order_Operator int32

const (
	Order_LTE Order_Operator = 0
	Order_GTE Order_Operator = 1
)

// Enum value maps for Order_Operator.
var (
	Order_Operator_name = map[int32]string{
		0: "LTE",
		1: "GTE",
	}
	Order_Operator_value = map[string]int32{
		"LTE": 0,
		"GTE": 1,
	}
)

func (x Order_Operator) Enum() *Order_Operator {
	p := new(Order_Operator)
	*p = x
	return p
}

func (x Order_Operator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Order_Operator) Descriptor() protoreflect.EnumDescriptor {
	return file_websocket_proto_enumTypes[5].Descriptor()
}

func (Order_Operator) Type() protoreflect.EnumType {
	return &file_websocket_proto_enumTypes[5]
}

func (x Order_Operator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Order_Operator.Descriptor instead.
func (Order_Operator) EnumDescriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{18, 3}
}

type MarginAccount_State int32

const (
	MarginAccount_NORMAL      MarginAccount_State = 0
	MarginAccount_LIQUIDATION MarginAccount_State = 1
	MarginAccount_PIERCING    MarginAccount_State = 2
)

// Enum value maps for MarginAccount_State.
var (
	MarginAccount_State_name = map[int32]string{
		0: "NORMAL",
		1: "LIQUIDATION",
		2: "PIERCING",
	}
	MarginAccount_State_value = map[string]int32{
		"NORMAL":      0,
		"LIQUIDATION": 1,
		"PIERCING":    2,
	}
)

func (x MarginAccount_State) Enum() *MarginAccount_State {
	p := new(MarginAccount_State)
	*p = x
	return p
}

func (x MarginAccount_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MarginAccount_State) Descriptor() protoreflect.EnumDescriptor {
	return file_websocket_proto_enumTypes[6].Descriptor()
}

func (MarginAccount_State) Type() protoreflect.EnumType {
	return &file_websocket_proto_enumTypes[6]
}

func (x MarginAccount_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MarginAccount_State.Descriptor instead.
func (MarginAccount_State) EnumDescriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{20, 0}
}

type Candle_Period int32

const (
	Candle_MIN1   Candle_Period = 0
	Candle_MIN5   Candle_Period = 1
	Candle_MIN15  Candle_Period = 2
	Candle_MIN30  Candle_Period = 3
	Candle_HOUR1  Candle_Period = 4
	Candle_HOUR3  Candle_Period = 5
	Candle_HOUR4  Candle_Period = 6
	Candle_HOUR6  Candle_Period = 7
	Candle_HOUR12 Candle_Period = 8
	Candle_DAY1   Candle_Period = 9
	Candle_WEEK1  Candle_Period = 10
	Candle_MONTH1 Candle_Period = 11
)

// Enum value maps for Candle_Period.
var (
	Candle_Period_name = map[int32]string{
		0:  "MIN1",
		1:  "MIN5",
		2:  "MIN15",
		3:  "MIN30",
		4:  "HOUR1",
		5:  "HOUR3",
		6:  "HOUR4",
		7:  "HOUR6",
		8:  "HOUR12",
		9:  "DAY1",
		10: "WEEK1",
		11: "MONTH1",
	}
	Candle_Period_value = map[string]int32{
		"MIN1":   0,
		"MIN5":   1,
		"MIN15":  2,
		"MIN30":  3,
		"HOUR1":  4,
		"HOUR3":  5,
		"HOUR4":  6,
		"HOUR6":  7,
		"HOUR12": 8,
		"DAY1":   9,
		"WEEK1":  10,
		"MONTH1": 11,
	}
)

func (x Candle_Period) Enum() *Candle_Period {
	p := new(Candle_Period)
	*p = x
	return p
}

func (x Candle_Period) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Candle_Period) Descriptor() protoreflect.EnumDescriptor {
	return file_websocket_proto_enumTypes[7].Descriptor()
}

func (Candle_Period) Type() protoreflect.EnumType {
	return &file_websocket_proto_enumTypes[7]
}

func (x Candle_Period) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Candle_Period.Descriptor instead.
func (Candle_Period) EnumDescriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{22, 0}
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Types that are assignable to Payload:
	//	*Request_HeartbeatRequest
	//	*Request_Ping
	//	*Request_SubscribeMarketsTickerRequest
	//	*Request_SubscribeMarketTradesRequest
	//	*Request_SubscribeMarketDepthRequest
	//	*Request_SubscribeMarketCandlesRequest
	//	*Request_SubscribeViewerAccountsRequest
	//	*Request_SubscribeViewerOrdersRequest
	//	*Request_UnsubscribeMarketsTickerRequest
	//	*Request_UnsubscribeMarketTradesRequest
	//	*Request_UnsubscribeMarketDepthRequest
	//	*Request_UnsubscribeMarketCandlesRequest
	//	*Request_UnsubscribeViewerAccountsRequest
	//	*Request_UnsubscribeViewerOrdersRequest
	//	*Request_AuthenticateCustomerRequest
	//	*Request_CreateOrderRequest
	//	*Request_CancelOrderRequest
	//	*Request_CancelAllOrdersRequest
	//	*Request_ListMarketsRequest
	//	*Request_SubscribeMarketTickersRequest
	//	*Request_UnsubscribeMarketTickersRequest
	//	*Request_SubscribeViewerMarginAccountsRequest
	//	*Request_UnsubscribeViewerMarginAccountsRequest
	//	*Request_SubscribeExchangeRatesListRequest
	//	*Request_UnsubscribeExchangeRatesListRequest
	//	*Request_SubscribeFlashExchangeOrdersRequest
	//	*Request_UnsubscribeFlashExchangeOrdersRequest
	Payload isRequest_Payload `protobuf_oneof:"payload"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (m *Request) GetPayload() isRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Request) GetHeartbeatRequest() *HeartbeatRequest {
	if x, ok := x.GetPayload().(*Request_HeartbeatRequest); ok {
		return x.HeartbeatRequest
	}
	return nil
}

func (x *Request) GetPing() *Ping {
	if x, ok := x.GetPayload().(*Request_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *Request) GetSubscribeMarketsTickerRequest() *SubscribeMarketsTickerRequest {
	if x, ok := x.GetPayload().(*Request_SubscribeMarketsTickerRequest); ok {
		return x.SubscribeMarketsTickerRequest
	}
	return nil
}

func (x *Request) GetSubscribeMarketTradesRequest() *SubscribeMarketTradesRequest {
	if x, ok := x.GetPayload().(*Request_SubscribeMarketTradesRequest); ok {
		return x.SubscribeMarketTradesRequest
	}
	return nil
}

func (x *Request) GetSubscribeMarketDepthRequest() *SubscribeMarketDepthRequest {
	if x, ok := x.GetPayload().(*Request_SubscribeMarketDepthRequest); ok {
		return x.SubscribeMarketDepthRequest
	}
	return nil
}

func (x *Request) GetSubscribeMarketCandlesRequest() *SubscribeMarketCandlesRequest {
	if x, ok := x.GetPayload().(*Request_SubscribeMarketCandlesRequest); ok {
		return x.SubscribeMarketCandlesRequest
	}
	return nil
}

func (x *Request) GetSubscribeViewerAccountsRequest() *SubscribeViewerAccountsRequest {
	if x, ok := x.GetPayload().(*Request_SubscribeViewerAccountsRequest); ok {
		return x.SubscribeViewerAccountsRequest
	}
	return nil
}

func (x *Request) GetSubscribeViewerOrdersRequest() *SubscribeViewerOrdersRequest {
	if x, ok := x.GetPayload().(*Request_SubscribeViewerOrdersRequest); ok {
		return x.SubscribeViewerOrdersRequest
	}
	return nil
}

func (x *Request) GetUnsubscribeMarketsTickerRequest() *UnsubscribeMarketsTickerRequest {
	if x, ok := x.GetPayload().(*Request_UnsubscribeMarketsTickerRequest); ok {
		return x.UnsubscribeMarketsTickerRequest
	}
	return nil
}

func (x *Request) GetUnsubscribeMarketTradesRequest() *UnsubscribeMarketTradesRequest {
	if x, ok := x.GetPayload().(*Request_UnsubscribeMarketTradesRequest); ok {
		return x.UnsubscribeMarketTradesRequest
	}
	return nil
}

func (x *Request) GetUnsubscribeMarketDepthRequest() *UnsubscribeMarketDepthRequest {
	if x, ok := x.GetPayload().(*Request_UnsubscribeMarketDepthRequest); ok {
		return x.UnsubscribeMarketDepthRequest
	}
	return nil
}

func (x *Request) GetUnsubscribeMarketCandlesRequest() *UnsubscribeMarketCandlesRequest {
	if x, ok := x.GetPayload().(*Request_UnsubscribeMarketCandlesRequest); ok {
		return x.UnsubscribeMarketCandlesRequest
	}
	return nil
}

func (x *Request) GetUnsubscribeViewerAccountsRequest() *UnsubscribeViewerAccountsRequest {
	if x, ok := x.GetPayload().(*Request_UnsubscribeViewerAccountsRequest); ok {
		return x.UnsubscribeViewerAccountsRequest
	}
	return nil
}

func (x *Request) GetUnsubscribeViewerOrdersRequest() *UnsubscribeViewerOrdersRequest {
	if x, ok := x.GetPayload().(*Request_UnsubscribeViewerOrdersRequest); ok {
		return x.UnsubscribeViewerOrdersRequest
	}
	return nil
}

func (x *Request) GetAuthenticateCustomerRequest() *AuthenticateCustomerRequest {
	if x, ok := x.GetPayload().(*Request_AuthenticateCustomerRequest); ok {
		return x.AuthenticateCustomerRequest
	}
	return nil
}

func (x *Request) GetCreateOrderRequest() *CreateOrderRequest {
	if x, ok := x.GetPayload().(*Request_CreateOrderRequest); ok {
		return x.CreateOrderRequest
	}
	return nil
}

func (x *Request) GetCancelOrderRequest() *CancelOrderRequest {
	if x, ok := x.GetPayload().(*Request_CancelOrderRequest); ok {
		return x.CancelOrderRequest
	}
	return nil
}

func (x *Request) GetCancelAllOrdersRequest() *CancelAllOrdersRequest {
	if x, ok := x.GetPayload().(*Request_CancelAllOrdersRequest); ok {
		return x.CancelAllOrdersRequest
	}
	return nil
}

func (x *Request) GetListMarketsRequest() *ListMarketsRequest {
	if x, ok := x.GetPayload().(*Request_ListMarketsRequest); ok {
		return x.ListMarketsRequest
	}
	return nil
}

func (x *Request) GetSubscribeMarketTickersRequest() *SubscribeMarketTickersRequest {
	if x, ok := x.GetPayload().(*Request_SubscribeMarketTickersRequest); ok {
		return x.SubscribeMarketTickersRequest
	}
	return nil
}

func (x *Request) GetUnsubscribeMarketTickersRequest() *UnsubscribeMarketTickersRequest {
	if x, ok := x.GetPayload().(*Request_UnsubscribeMarketTickersRequest); ok {
		return x.UnsubscribeMarketTickersRequest
	}
	return nil
}

func (x *Request) GetSubscribeViewerMarginAccountsRequest() *SubscribeViewerMarginAccountsRequest {
	if x, ok := x.GetPayload().(*Request_SubscribeViewerMarginAccountsRequest); ok {
		return x.SubscribeViewerMarginAccountsRequest
	}
	return nil
}

func (x *Request) GetUnsubscribeViewerMarginAccountsRequest() *UnsubscribeViewerMarginAccountsRequest {
	if x, ok := x.GetPayload().(*Request_UnsubscribeViewerMarginAccountsRequest); ok {
		return x.UnsubscribeViewerMarginAccountsRequest
	}
	return nil
}

func (x *Request) GetSubscribeExchangeRatesListRequest() *SubscribeExchangeRatesListRequest {
	if x, ok := x.GetPayload().(*Request_SubscribeExchangeRatesListRequest); ok {
		return x.SubscribeExchangeRatesListRequest
	}
	return nil
}

func (x *Request) GetUnsubscribeExchangeRatesListRequest() *UnsubscribeExchangeRatesListRequest {
	if x, ok := x.GetPayload().(*Request_UnsubscribeExchangeRatesListRequest); ok {
		return x.UnsubscribeExchangeRatesListRequest
	}
	return nil
}

func (x *Request) GetSubscribeFlashExchangeOrdersRequest() *SubscribeFlashExchangeOrdersRequest {
	if x, ok := x.GetPayload().(*Request_SubscribeFlashExchangeOrdersRequest); ok {
		return x.SubscribeFlashExchangeOrdersRequest
	}
	return nil
}

func (x *Request) GetUnsubscribeFlashExchangeOrdersRequest() *UnsubscribeFlashExchangeOrdersRequest {
	if x, ok := x.GetPayload().(*Request_UnsubscribeFlashExchangeOrdersRequest); ok {
		return x.UnsubscribeFlashExchangeOrdersRequest
	}
	return nil
}

type isRequest_Payload interface {
	isRequest_Payload()
}

type Request_HeartbeatRequest struct {
	HeartbeatRequest *HeartbeatRequest `protobuf:"bytes,200,opt,name=heartbeat_request,json=heartbeatRequest,proto3,oneof"`
}

type Request_Ping struct {
	Ping *Ping `protobuf:"bytes,100,opt,name=ping,proto3,oneof"`
}

type Request_SubscribeMarketsTickerRequest struct {
	SubscribeMarketsTickerRequest *SubscribeMarketsTickerRequest `protobuf:"bytes,101,opt,name=subscribe_markets_ticker_request,json=subscribeMarketsTickerRequest,proto3,oneof"`
}

type Request_SubscribeMarketTradesRequest struct {
	SubscribeMarketTradesRequest *SubscribeMarketTradesRequest `protobuf:"bytes,102,opt,name=subscribe_market_trades_request,json=subscribeMarketTradesRequest,proto3,oneof"`
}

type Request_SubscribeMarketDepthRequest struct {
	SubscribeMarketDepthRequest *SubscribeMarketDepthRequest `protobuf:"bytes,103,opt,name=subscribe_market_depth_request,json=subscribeMarketDepthRequest,proto3,oneof"`
}

type Request_SubscribeMarketCandlesRequest struct {
	SubscribeMarketCandlesRequest *SubscribeMarketCandlesRequest `protobuf:"bytes,104,opt,name=subscribe_market_candles_request,json=subscribeMarketCandlesRequest,proto3,oneof"`
}

type Request_SubscribeViewerAccountsRequest struct {
	SubscribeViewerAccountsRequest *SubscribeViewerAccountsRequest `protobuf:"bytes,105,opt,name=subscribe_viewer_accounts_request,json=subscribeViewerAccountsRequest,proto3,oneof"`
}

type Request_SubscribeViewerOrdersRequest struct {
	SubscribeViewerOrdersRequest *SubscribeViewerOrdersRequest `protobuf:"bytes,106,opt,name=subscribe_viewer_orders_request,json=subscribeViewerOrdersRequest,proto3,oneof"`
}

type Request_UnsubscribeMarketsTickerRequest struct {
	UnsubscribeMarketsTickerRequest *UnsubscribeMarketsTickerRequest `protobuf:"bytes,107,opt,name=unsubscribe_markets_ticker_request,json=unsubscribeMarketsTickerRequest,proto3,oneof"`
}

type Request_UnsubscribeMarketTradesRequest struct {
	UnsubscribeMarketTradesRequest *UnsubscribeMarketTradesRequest `protobuf:"bytes,108,opt,name=unsubscribe_market_trades_request,json=unsubscribeMarketTradesRequest,proto3,oneof"`
}

type Request_UnsubscribeMarketDepthRequest struct {
	UnsubscribeMarketDepthRequest *UnsubscribeMarketDepthRequest `protobuf:"bytes,109,opt,name=unsubscribe_market_depth_request,json=unsubscribeMarketDepthRequest,proto3,oneof"`
}

type Request_UnsubscribeMarketCandlesRequest struct {
	UnsubscribeMarketCandlesRequest *UnsubscribeMarketCandlesRequest `protobuf:"bytes,110,opt,name=unsubscribe_market_candles_request,json=unsubscribeMarketCandlesRequest,proto3,oneof"`
}

type Request_UnsubscribeViewerAccountsRequest struct {
	UnsubscribeViewerAccountsRequest *UnsubscribeViewerAccountsRequest `protobuf:"bytes,111,opt,name=unsubscribe_viewer_accounts_request,json=unsubscribeViewerAccountsRequest,proto3,oneof"`
}

type Request_UnsubscribeViewerOrdersRequest struct {
	UnsubscribeViewerOrdersRequest *UnsubscribeViewerOrdersRequest `protobuf:"bytes,112,opt,name=unsubscribe_viewer_orders_request,json=unsubscribeViewerOrdersRequest,proto3,oneof"`
}

type Request_AuthenticateCustomerRequest struct {
	AuthenticateCustomerRequest *AuthenticateCustomerRequest `protobuf:"bytes,113,opt,name=authenticate_customer_request,json=authenticateCustomerRequest,proto3,oneof"`
}

type Request_CreateOrderRequest struct {
	CreateOrderRequest *CreateOrderRequest `protobuf:"bytes,114,opt,name=create_order_request,json=createOrderRequest,proto3,oneof"`
}

type Request_CancelOrderRequest struct {
	CancelOrderRequest *CancelOrderRequest `protobuf:"bytes,115,opt,name=cancel_order_request,json=cancelOrderRequest,proto3,oneof"`
}

type Request_CancelAllOrdersRequest struct {
	CancelAllOrdersRequest *CancelAllOrdersRequest `protobuf:"bytes,116,opt,name=cancel_all_orders_request,json=cancelAllOrdersRequest,proto3,oneof"`
}

type Request_ListMarketsRequest struct {
	ListMarketsRequest *ListMarketsRequest `protobuf:"bytes,117,opt,name=list_markets_request,json=listMarketsRequest,proto3,oneof"`
}

type Request_SubscribeMarketTickersRequest struct {
	SubscribeMarketTickersRequest *SubscribeMarketTickersRequest `protobuf:"bytes,118,opt,name=subscribe_market_tickers_request,json=subscribeMarketTickersRequest,proto3,oneof"`
}

type Request_UnsubscribeMarketTickersRequest struct {
	UnsubscribeMarketTickersRequest *UnsubscribeMarketTickersRequest `protobuf:"bytes,119,opt,name=unsubscribe_market_tickers_request,json=unsubscribeMarketTickersRequest,proto3,oneof"`
}

type Request_SubscribeViewerMarginAccountsRequest struct {
	SubscribeViewerMarginAccountsRequest *SubscribeViewerMarginAccountsRequest `protobuf:"bytes,120,opt,name=subscribe_viewer_margin_accounts_request,json=subscribeViewerMarginAccountsRequest,proto3,oneof"`
}

type Request_UnsubscribeViewerMarginAccountsRequest struct {
	UnsubscribeViewerMarginAccountsRequest *UnsubscribeViewerMarginAccountsRequest `protobuf:"bytes,121,opt,name=unsubscribe_viewer_margin_accounts_request,json=unsubscribeViewerMarginAccountsRequest,proto3,oneof"`
}

type Request_SubscribeExchangeRatesListRequest struct {
	SubscribeExchangeRatesListRequest *SubscribeExchangeRatesListRequest `protobuf:"bytes,122,opt,name=subscribe_exchange_rates_list_request,json=subscribeExchangeRatesListRequest,proto3,oneof"`
}

type Request_UnsubscribeExchangeRatesListRequest struct {
	UnsubscribeExchangeRatesListRequest *UnsubscribeExchangeRatesListRequest `protobuf:"bytes,123,opt,name=unsubscribe_exchange_rates_list_request,json=unsubscribeExchangeRatesListRequest,proto3,oneof"`
}

type Request_SubscribeFlashExchangeOrdersRequest struct {
	SubscribeFlashExchangeOrdersRequest *SubscribeFlashExchangeOrdersRequest `protobuf:"bytes,124,opt,name=subscribe_flash_exchange_orders_request,json=subscribeFlashExchangeOrdersRequest,proto3,oneof"`
}

type Request_UnsubscribeFlashExchangeOrdersRequest struct {
	UnsubscribeFlashExchangeOrdersRequest *UnsubscribeFlashExchangeOrdersRequest `protobuf:"bytes,125,opt,name=unsubscribe_flash_exchange_orders_request,json=unsubscribeFlashExchangeOrdersRequest,proto3,oneof"`
}

func (*Request_HeartbeatRequest) isRequest_Payload() {}

func (*Request_Ping) isRequest_Payload() {}

func (*Request_SubscribeMarketsTickerRequest) isRequest_Payload() {}

func (*Request_SubscribeMarketTradesRequest) isRequest_Payload() {}

func (*Request_SubscribeMarketDepthRequest) isRequest_Payload() {}

func (*Request_SubscribeMarketCandlesRequest) isRequest_Payload() {}

func (*Request_SubscribeViewerAccountsRequest) isRequest_Payload() {}

func (*Request_SubscribeViewerOrdersRequest) isRequest_Payload() {}

func (*Request_UnsubscribeMarketsTickerRequest) isRequest_Payload() {}

func (*Request_UnsubscribeMarketTradesRequest) isRequest_Payload() {}

func (*Request_UnsubscribeMarketDepthRequest) isRequest_Payload() {}

func (*Request_UnsubscribeMarketCandlesRequest) isRequest_Payload() {}

func (*Request_UnsubscribeViewerAccountsRequest) isRequest_Payload() {}

func (*Request_UnsubscribeViewerOrdersRequest) isRequest_Payload() {}

func (*Request_AuthenticateCustomerRequest) isRequest_Payload() {}

func (*Request_CreateOrderRequest) isRequest_Payload() {}

func (*Request_CancelOrderRequest) isRequest_Payload() {}

func (*Request_CancelAllOrdersRequest) isRequest_Payload() {}

func (*Request_ListMarketsRequest) isRequest_Payload() {}

func (*Request_SubscribeMarketTickersRequest) isRequest_Payload() {}

func (*Request_UnsubscribeMarketTickersRequest) isRequest_Payload() {}

func (*Request_SubscribeViewerMarginAccountsRequest) isRequest_Payload() {}

func (*Request_UnsubscribeViewerMarginAccountsRequest) isRequest_Payload() {}

func (*Request_SubscribeExchangeRatesListRequest) isRequest_Payload() {}

func (*Request_UnsubscribeExchangeRatesListRequest) isRequest_Payload() {}

func (*Request_SubscribeFlashExchangeOrdersRequest) isRequest_Payload() {}

func (*Request_UnsubscribeFlashExchangeOrdersRequest) isRequest_Payload() {}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Types that are assignable to Payload:
	//	*Response_Success
	//	*Response_Error
	//	*Response_Pong
	//	*Response_Heartbeat
	//	*Response_TickersSnapshot
	//	*Response_TickerUpdate
	//	*Response_TradesSnapshot
	//	*Response_TradeUpdate
	//	*Response_DepthSnapshot
	//	*Response_DepthUpdate
	//	*Response_AccountsSnapshot
	//	*Response_AccountUpdate
	//	*Response_CandlesSnapshot
	//	*Response_CandleUpdate
	//	*Response_OrdersSnapshot
	//	*Response_OrderUpdate
	//	*Response_ListMarketsResponse
	//	*Response_MarginAccountsSnapshot
	//	*Response_MarginAccountUpdate
	//	*Response_ExchangeRatesListSnapshot
	//	*Response_FlashExchangeOrdersSnapshot
	//	*Response_FlashExchangeOrderUpdate
	//	*Response_ExchangeRatesListUpdate
	Payload isResponse_Payload `protobuf_oneof:"payload"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (m *Response) GetPayload() isResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Response) GetSuccess() *Success {
	if x, ok := x.GetPayload().(*Response_Success); ok {
		return x.Success
	}
	return nil
}

func (x *Response) GetError() *Error {
	if x, ok := x.GetPayload().(*Response_Error); ok {
		return x.Error
	}
	return nil
}

func (x *Response) GetPong() *Pong {
	if x, ok := x.GetPayload().(*Response_Pong); ok {
		return x.Pong
	}
	return nil
}

func (x *Response) GetHeartbeat() *Heartbeat {
	if x, ok := x.GetPayload().(*Response_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (x *Response) GetTickersSnapshot() *TickersSnapshot {
	if x, ok := x.GetPayload().(*Response_TickersSnapshot); ok {
		return x.TickersSnapshot
	}
	return nil
}

func (x *Response) GetTickerUpdate() *TickerUpdate {
	if x, ok := x.GetPayload().(*Response_TickerUpdate); ok {
		return x.TickerUpdate
	}
	return nil
}

func (x *Response) GetTradesSnapshot() *TradesSnapshot {
	if x, ok := x.GetPayload().(*Response_TradesSnapshot); ok {
		return x.TradesSnapshot
	}
	return nil
}

func (x *Response) GetTradeUpdate() *TradeUpdate {
	if x, ok := x.GetPayload().(*Response_TradeUpdate); ok {
		return x.TradeUpdate
	}
	return nil
}

func (x *Response) GetDepthSnapshot() *DepthSnapshot {
	if x, ok := x.GetPayload().(*Response_DepthSnapshot); ok {
		return x.DepthSnapshot
	}
	return nil
}

func (x *Response) GetDepthUpdate() *DepthUpdate {
	if x, ok := x.GetPayload().(*Response_DepthUpdate); ok {
		return x.DepthUpdate
	}
	return nil
}

func (x *Response) GetAccountsSnapshot() *AccountsSnapshot {
	if x, ok := x.GetPayload().(*Response_AccountsSnapshot); ok {
		return x.AccountsSnapshot
	}
	return nil
}

func (x *Response) GetAccountUpdate() *AccountUpdate {
	if x, ok := x.GetPayload().(*Response_AccountUpdate); ok {
		return x.AccountUpdate
	}
	return nil
}

func (x *Response) GetCandlesSnapshot() *CandlesSnapshot {
	if x, ok := x.GetPayload().(*Response_CandlesSnapshot); ok {
		return x.CandlesSnapshot
	}
	return nil
}

func (x *Response) GetCandleUpdate() *CandleUpdate {
	if x, ok := x.GetPayload().(*Response_CandleUpdate); ok {
		return x.CandleUpdate
	}
	return nil
}

func (x *Response) GetOrdersSnapshot() *OrdersSnapshot {
	if x, ok := x.GetPayload().(*Response_OrdersSnapshot); ok {
		return x.OrdersSnapshot
	}
	return nil
}

func (x *Response) GetOrderUpdate() *OrderUpdate {
	if x, ok := x.GetPayload().(*Response_OrderUpdate); ok {
		return x.OrderUpdate
	}
	return nil
}

func (x *Response) GetListMarketsResponse() *ListMarketsResponse {
	if x, ok := x.GetPayload().(*Response_ListMarketsResponse); ok {
		return x.ListMarketsResponse
	}
	return nil
}

func (x *Response) GetMarginAccountsSnapshot() *MarginAccountsSnapshot {
	if x, ok := x.GetPayload().(*Response_MarginAccountsSnapshot); ok {
		return x.MarginAccountsSnapshot
	}
	return nil
}

func (x *Response) GetMarginAccountUpdate() *MarginAccountUpdate {
	if x, ok := x.GetPayload().(*Response_MarginAccountUpdate); ok {
		return x.MarginAccountUpdate
	}
	return nil
}

func (x *Response) GetExchangeRatesListSnapshot() *ExchangeRatesListSnapshot {
	if x, ok := x.GetPayload().(*Response_ExchangeRatesListSnapshot); ok {
		return x.ExchangeRatesListSnapshot
	}
	return nil
}

func (x *Response) GetFlashExchangeOrdersSnapshot() *FlashExchangeOrdersSnapshot {
	if x, ok := x.GetPayload().(*Response_FlashExchangeOrdersSnapshot); ok {
		return x.FlashExchangeOrdersSnapshot
	}
	return nil
}

func (x *Response) GetFlashExchangeOrderUpdate() *FlashExchangeOrderUpdate {
	if x, ok := x.GetPayload().(*Response_FlashExchangeOrderUpdate); ok {
		return x.FlashExchangeOrderUpdate
	}
	return nil
}

func (x *Response) GetExchangeRatesListUpdate() *ExchangeRatesListUpdate {
	if x, ok := x.GetPayload().(*Response_ExchangeRatesListUpdate); ok {
		return x.ExchangeRatesListUpdate
	}
	return nil
}

type isResponse_Payload interface {
	isResponse_Payload()
}

type Response_Success struct {
	Success *Success `protobuf:"bytes,98,opt,name=success,proto3,oneof"`
}

type Response_Error struct {
	Error *Error `protobuf:"bytes,99,opt,name=error,proto3,oneof"`
}

type Response_Pong struct {
	Pong *Pong `protobuf:"bytes,100,opt,name=pong,proto3,oneof"`
}

type Response_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,200,opt,name=heartbeat,proto3,oneof"`
}

type Response_TickersSnapshot struct {
	TickersSnapshot *TickersSnapshot `protobuf:"bytes,101,opt,name=tickers_snapshot,json=tickersSnapshot,proto3,oneof"`
}

type Response_TickerUpdate struct {
	TickerUpdate *TickerUpdate `protobuf:"bytes,102,opt,name=ticker_update,json=tickerUpdate,proto3,oneof"`
}

type Response_TradesSnapshot struct {
	TradesSnapshot *TradesSnapshot `protobuf:"bytes,103,opt,name=trades_snapshot,json=tradesSnapshot,proto3,oneof"`
}

type Response_TradeUpdate struct {
	TradeUpdate *TradeUpdate `protobuf:"bytes,104,opt,name=trade_update,json=tradeUpdate,proto3,oneof"`
}

type Response_DepthSnapshot struct {
	DepthSnapshot *DepthSnapshot `protobuf:"bytes,105,opt,name=depth_snapshot,json=depthSnapshot,proto3,oneof"`
}

type Response_DepthUpdate struct {
	DepthUpdate *DepthUpdate `protobuf:"bytes,106,opt,name=depth_update,json=depthUpdate,proto3,oneof"`
}

type Response_AccountsSnapshot struct {
	AccountsSnapshot *AccountsSnapshot `protobuf:"bytes,107,opt,name=accounts_snapshot,json=accountsSnapshot,proto3,oneof"`
}

type Response_AccountUpdate struct {
	AccountUpdate *AccountUpdate `protobuf:"bytes,108,opt,name=account_update,json=accountUpdate,proto3,oneof"`
}

type Response_CandlesSnapshot struct {
	CandlesSnapshot *CandlesSnapshot `protobuf:"bytes,109,opt,name=candles_snapshot,json=candlesSnapshot,proto3,oneof"`
}

type Response_CandleUpdate struct {
	CandleUpdate *CandleUpdate `protobuf:"bytes,110,opt,name=candle_update,json=candleUpdate,proto3,oneof"`
}

type Response_OrdersSnapshot struct {
	OrdersSnapshot *OrdersSnapshot `protobuf:"bytes,111,opt,name=orders_snapshot,json=ordersSnapshot,proto3,oneof"`
}

type Response_OrderUpdate struct {
	OrderUpdate *OrderUpdate `protobuf:"bytes,112,opt,name=order_update,json=orderUpdate,proto3,oneof"`
}

type Response_ListMarketsResponse struct {
	ListMarketsResponse *ListMarketsResponse `protobuf:"bytes,113,opt,name=list_markets_response,json=listMarketsResponse,proto3,oneof"`
}

type Response_MarginAccountsSnapshot struct {
	MarginAccountsSnapshot *MarginAccountsSnapshot `protobuf:"bytes,114,opt,name=margin_accounts_snapshot,json=marginAccountsSnapshot,proto3,oneof"`
}

type Response_MarginAccountUpdate struct {
	MarginAccountUpdate *MarginAccountUpdate `protobuf:"bytes,115,opt,name=margin_account_update,json=marginAccountUpdate,proto3,oneof"`
}

type Response_ExchangeRatesListSnapshot struct {
	ExchangeRatesListSnapshot *ExchangeRatesListSnapshot `protobuf:"bytes,116,opt,name=exchange_rates_list_snapshot,json=exchangeRatesListSnapshot,proto3,oneof"`
}

type Response_FlashExchangeOrdersSnapshot struct {
	FlashExchangeOrdersSnapshot *FlashExchangeOrdersSnapshot `protobuf:"bytes,117,opt,name=flash_exchange_orders_snapshot,json=flashExchangeOrdersSnapshot,proto3,oneof"`
}

type Response_FlashExchangeOrderUpdate struct {
	FlashExchangeOrderUpdate *FlashExchangeOrderUpdate `protobuf:"bytes,118,opt,name=flash_exchange_order_update,json=flashExchangeOrderUpdate,proto3,oneof"`
}

type Response_ExchangeRatesListUpdate struct {
	ExchangeRatesListUpdate *ExchangeRatesListUpdate `protobuf:"bytes,119,opt,name=exchange_rates_list_update,json=exchangeRatesListUpdate,proto3,oneof"`
}

func (*Response_Success) isResponse_Payload() {}

func (*Response_Error) isResponse_Payload() {}

func (*Response_Pong) isResponse_Payload() {}

func (*Response_Heartbeat) isResponse_Payload() {}

func (*Response_TickersSnapshot) isResponse_Payload() {}

func (*Response_TickerUpdate) isResponse_Payload() {}

func (*Response_TradesSnapshot) isResponse_Payload() {}

func (*Response_TradeUpdate) isResponse_Payload() {}

func (*Response_DepthSnapshot) isResponse_Payload() {}

func (*Response_DepthUpdate) isResponse_Payload() {}

func (*Response_AccountsSnapshot) isResponse_Payload() {}

func (*Response_AccountUpdate) isResponse_Payload() {}

func (*Response_CandlesSnapshot) isResponse_Payload() {}

func (*Response_CandleUpdate) isResponse_Payload() {}

func (*Response_OrdersSnapshot) isResponse_Payload() {}

func (*Response_OrderUpdate) isResponse_Payload() {}

func (*Response_ListMarketsResponse) isResponse_Payload() {}

func (*Response_MarginAccountsSnapshot) isResponse_Payload() {}

func (*Response_MarginAccountUpdate) isResponse_Payload() {}

func (*Response_ExchangeRatesListSnapshot) isResponse_Payload() {}

func (*Response_FlashExchangeOrdersSnapshot) isResponse_Payload() {}

func (*Response_FlashExchangeOrderUpdate) isResponse_Payload() {}

func (*Response_ExchangeRatesListUpdate) isResponse_Payload() {}

type SubscribeFlashExchangeOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartOrderId uint64 `protobuf:"varint,1,opt,name=start_order_id,json=startOrderId,proto3" json:"start_order_id,omitempty"`
	Limit        uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *SubscribeFlashExchangeOrdersRequest) Reset() {
	*x = SubscribeFlashExchangeOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeFlashExchangeOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeFlashExchangeOrdersRequest) ProtoMessage() {}

func (x *SubscribeFlashExchangeOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeFlashExchangeOrdersRequest.ProtoReflect.Descriptor instead.
func (*SubscribeFlashExchangeOrdersRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{2}
}

func (x *SubscribeFlashExchangeOrdersRequest) GetStartOrderId() uint64 {
	if x != nil {
		return x.StartOrderId
	}
	return 0
}

func (x *SubscribeFlashExchangeOrdersRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type UnsubscribeFlashExchangeOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnsubscribeFlashExchangeOrdersRequest) Reset() {
	*x = UnsubscribeFlashExchangeOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeFlashExchangeOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeFlashExchangeOrdersRequest) ProtoMessage() {}

func (x *UnsubscribeFlashExchangeOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeFlashExchangeOrdersRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeFlashExchangeOrdersRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{3}
}

type FlashExchangeOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  uint64                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ExchangeAssetSymbol string                    `protobuf:"bytes,2,opt,name=exchange_asset_symbol,json=exchangeAssetSymbol,proto3" json:"exchange_asset_symbol,omitempty"`
	PayAssetSymbol      string                    `protobuf:"bytes,3,opt,name=pay_asset_symbol,json=payAssetSymbol,proto3" json:"pay_asset_symbol,omitempty"`
	CustomerId          uint64                    `protobuf:"varint,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	DealerCid           uint64                    `protobuf:"varint,5,opt,name=dealer_cid,json=dealerCid,proto3" json:"dealer_cid,omitempty"`
	ExchangeAmount      string                    `protobuf:"bytes,6,opt,name=exchange_amount,json=exchangeAmount,proto3" json:"exchange_amount,omitempty"`
	EstimatedPayAmount  string                    `protobuf:"bytes,7,opt,name=estimated_pay_amount,json=estimatedPayAmount,proto3" json:"estimated_pay_amount,omitempty"`
	PayAmount           string                    `protobuf:"bytes,8,opt,name=pay_amount,json=payAmount,proto3" json:"pay_amount,omitempty"`
	Status              FlashExchangeOrder_Status `protobuf:"varint,9,opt,name=status,proto3,enum=bigone.FlashExchangeOrder_Status" json:"status,omitempty"`
	CreatedAt           *timestamp.Timestamp      `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           *timestamp.Timestamp      `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *FlashExchangeOrder) Reset() {
	*x = FlashExchangeOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlashExchangeOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlashExchangeOrder) ProtoMessage() {}

func (x *FlashExchangeOrder) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlashExchangeOrder.ProtoReflect.Descriptor instead.
func (*FlashExchangeOrder) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{4}
}

func (x *FlashExchangeOrder) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FlashExchangeOrder) GetExchangeAssetSymbol() string {
	if x != nil {
		return x.ExchangeAssetSymbol
	}
	return ""
}

func (x *FlashExchangeOrder) GetPayAssetSymbol() string {
	if x != nil {
		return x.PayAssetSymbol
	}
	return ""
}

func (x *FlashExchangeOrder) GetCustomerId() uint64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *FlashExchangeOrder) GetDealerCid() uint64 {
	if x != nil {
		return x.DealerCid
	}
	return 0
}

func (x *FlashExchangeOrder) GetExchangeAmount() string {
	if x != nil {
		return x.ExchangeAmount
	}
	return ""
}

func (x *FlashExchangeOrder) GetEstimatedPayAmount() string {
	if x != nil {
		return x.EstimatedPayAmount
	}
	return ""
}

func (x *FlashExchangeOrder) GetPayAmount() string {
	if x != nil {
		return x.PayAmount
	}
	return ""
}

func (x *FlashExchangeOrder) GetStatus() FlashExchangeOrder_Status {
	if x != nil {
		return x.Status
	}
	return FlashExchangeOrder_UNSPECIFIED
}

func (x *FlashExchangeOrder) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FlashExchangeOrder) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type FlashExchangeOrdersSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlashExchangeOrders []*FlashExchangeOrder `protobuf:"bytes,1,rep,name=flash_exchange_orders,json=flashExchangeOrders,proto3" json:"flash_exchange_orders,omitempty"`
}

func (x *FlashExchangeOrdersSnapshot) Reset() {
	*x = FlashExchangeOrdersSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlashExchangeOrdersSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlashExchangeOrdersSnapshot) ProtoMessage() {}

func (x *FlashExchangeOrdersSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlashExchangeOrdersSnapshot.ProtoReflect.Descriptor instead.
func (*FlashExchangeOrdersSnapshot) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{5}
}

func (x *FlashExchangeOrdersSnapshot) GetFlashExchangeOrders() []*FlashExchangeOrder {
	if x != nil {
		return x.FlashExchangeOrders
	}
	return nil
}

type FlashExchangeOrderUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlashExchangeOrder *FlashExchangeOrder `protobuf:"bytes,1,opt,name=flash_exchange_order,json=flashExchangeOrder,proto3" json:"flash_exchange_order,omitempty"`
}

func (x *FlashExchangeOrderUpdate) Reset() {
	*x = FlashExchangeOrderUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlashExchangeOrderUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlashExchangeOrderUpdate) ProtoMessage() {}

func (x *FlashExchangeOrderUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlashExchangeOrderUpdate.ProtoReflect.Descriptor instead.
func (*FlashExchangeOrderUpdate) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{6}
}

func (x *FlashExchangeOrderUpdate) GetFlashExchangeOrder() *FlashExchangeOrder {
	if x != nil {
		return x.FlashExchangeOrder
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{7}
}

func (x *Error) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *Success) Reset() {
	*x = Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{8}
}

func (x *Success) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type HeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interval uint64 `protobuf:"varint,1,opt,name=interval,proto3" json:"interval,omitempty"` // second
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{9}
}

func (x *HeartbeatRequest) GetInterval() uint64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type Heartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{10}
}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{11}
}

type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{12}
}

type Market struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BaseAsset     string `protobuf:"bytes,2,opt,name=base_asset,json=baseAsset,proto3" json:"base_asset,omitempty"`
	QuoteAsset    string `protobuf:"bytes,3,opt,name=quote_asset,json=quoteAsset,proto3" json:"quote_asset,omitempty"`
	BaseScale     uint32 `protobuf:"varint,4,opt,name=base_scale,json=baseScale,proto3" json:"base_scale,omitempty"`
	QuoteScale    uint32 `protobuf:"varint,5,opt,name=quote_scale,json=quoteScale,proto3" json:"quote_scale,omitempty"`
	MinQuoteValue string `protobuf:"bytes,6,opt,name=min_quote_value,json=minQuoteValue,proto3" json:"min_quote_value,omitempty"`
}

func (x *Market) Reset() {
	*x = Market{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Market) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Market) ProtoMessage() {}

func (x *Market) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Market.ProtoReflect.Descriptor instead.
func (*Market) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{13}
}

func (x *Market) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Market) GetBaseAsset() string {
	if x != nil {
		return x.BaseAsset
	}
	return ""
}

func (x *Market) GetQuoteAsset() string {
	if x != nil {
		return x.QuoteAsset
	}
	return ""
}

func (x *Market) GetBaseScale() uint32 {
	if x != nil {
		return x.BaseScale
	}
	return 0
}

func (x *Market) GetQuoteScale() uint32 {
	if x != nil {
		return x.QuoteScale
	}
	return 0
}

func (x *Market) GetMinQuoteValue() string {
	if x != nil {
		return x.MinQuoteValue
	}
	return ""
}

type PriceLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price      string `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	Amount     string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	OrderCount int64  `protobuf:"varint,3,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`
}

func (x *PriceLevel) Reset() {
	*x = PriceLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceLevel) ProtoMessage() {}

func (x *PriceLevel) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceLevel.ProtoReflect.Descriptor instead.
func (*PriceLevel) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{14}
}

func (x *PriceLevel) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *PriceLevel) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *PriceLevel) GetOrderCount() int64 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

type Depth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market string        `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Asks   []*PriceLevel `protobuf:"bytes,2,rep,name=asks,proto3" json:"asks,omitempty"`
	Bids   []*PriceLevel `protobuf:"bytes,3,rep,name=bids,proto3" json:"bids,omitempty"`
}

func (x *Depth) Reset() {
	*x = Depth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Depth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Depth) ProtoMessage() {}

func (x *Depth) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Depth.ProtoReflect.Descriptor instead.
func (*Depth) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{15}
}

func (x *Depth) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *Depth) GetAsks() []*PriceLevel {
	if x != nil {
		return x.Asks
	}
	return nil
}

func (x *Depth) GetBids() []*PriceLevel {
	if x != nil {
		return x.Bids
	}
	return nil
}

type Ticker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market          string      `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Ask             *PriceLevel `protobuf:"bytes,2,opt,name=ask,proto3" json:"ask,omitempty"`
	Bid             *PriceLevel `protobuf:"bytes,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Open            string      `protobuf:"bytes,4,opt,name=open,proto3" json:"open,omitempty"`
	High            string      `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	Low             string      `protobuf:"bytes,6,opt,name=low,proto3" json:"low,omitempty"`
	Close           string      `protobuf:"bytes,7,opt,name=close,proto3" json:"close,omitempty"`
	Volume          string      `protobuf:"bytes,8,opt,name=volume,proto3" json:"volume,omitempty"`
	DailyChange     string      `protobuf:"bytes,9,opt,name=dailyChange,proto3" json:"dailyChange,omitempty"`
	DailyChangePerc string      `protobuf:"bytes,10,opt,name=dailyChangePerc,proto3" json:"dailyChangePerc,omitempty"`
}

func (x *Ticker) Reset() {
	*x = Ticker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticker) ProtoMessage() {}

func (x *Ticker) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticker.ProtoReflect.Descriptor instead.
func (*Ticker) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{16}
}

func (x *Ticker) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *Ticker) GetAsk() *PriceLevel {
	if x != nil {
		return x.Ask
	}
	return nil
}

func (x *Ticker) GetBid() *PriceLevel {
	if x != nil {
		return x.Bid
	}
	return nil
}

func (x *Ticker) GetOpen() string {
	if x != nil {
		return x.Open
	}
	return ""
}

func (x *Ticker) GetHigh() string {
	if x != nil {
		return x.High
	}
	return ""
}

func (x *Ticker) GetLow() string {
	if x != nil {
		return x.Low
	}
	return ""
}

func (x *Ticker) GetClose() string {
	if x != nil {
		return x.Close
	}
	return ""
}

func (x *Ticker) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *Ticker) GetDailyChange() string {
	if x != nil {
		return x.DailyChange
	}
	return ""
}

func (x *Ticker) GetDailyChangePerc() string {
	if x != nil {
		return x.DailyChangePerc
	}
	return ""
}

type Trade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Price      string               `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	Amount     string               `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Market     string               `protobuf:"bytes,4,opt,name=market,proto3" json:"market,omitempty"`
	CreatedAt  *timestamp.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	MakerOrder *Order               `protobuf:"bytes,9,opt,name=maker_order,json=makerOrder,proto3" json:"maker_order,omitempty"`
	TakerOrder *Order               `protobuf:"bytes,10,opt,name=taker_order,json=takerOrder,proto3" json:"taker_order,omitempty"`
	TakerSide  Order_Side           `protobuf:"varint,11,opt,name=taker_side,json=takerSide,proto3,enum=bigone.Order_Side" json:"taker_side,omitempty"`
}

func (x *Trade) Reset() {
	*x = Trade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{17}
}

func (x *Trade) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Trade) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Trade) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Trade) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *Trade) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Trade) GetMakerOrder() *Order {
	if x != nil {
		return x.MakerOrder
	}
	return nil
}

func (x *Trade) GetTakerOrder() *Order {
	if x != nil {
		return x.TakerOrder
	}
	return nil
}

func (x *Trade) GetTakerSide() Order_Side {
	if x != nil {
		return x.TakerSide
	}
	return Order_BID
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Price        string               `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`                          // decimal or "MARKET"
	StopPrice    string               `protobuf:"bytes,3,opt,name=stop_price,json=stopPrice,proto3" json:"stop_price,omitempty"` // decimal or empty
	Amount       string               `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`                        // decimal non null
	Market       string               `protobuf:"bytes,5,opt,name=market,proto3" json:"market,omitempty"`                        // market name
	Side         Order_Side           `protobuf:"varint,6,opt,name=side,proto3,enum=bigone.Order_Side" json:"side,omitempty"`
	State        Order_State          `protobuf:"varint,7,opt,name=state,proto3,enum=bigone.Order_State" json:"state,omitempty"`
	FilledAmount string               `protobuf:"bytes,8,opt,name=filled_amount,json=filledAmount,proto3" json:"filled_amount,omitempty"`    // decimal
	FilledFees   string               `protobuf:"bytes,9,opt,name=filled_fees,json=filledFees,proto3" json:"filled_fees,omitempty"`          // decimal
	AvgDealPrice string               `protobuf:"bytes,10,opt,name=avg_deal_price,json=avgDealPrice,proto3" json:"avg_deal_price,omitempty"` // decimal
	CreatedAt    *timestamp.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	BusinessUnit BusinessUnit         `protobuf:"varint,13,opt,name=business_unit,json=businessUnit,proto3,enum=bigone.BusinessUnit" json:"business_unit,omitempty"`
	Type         Order_Type           `protobuf:"varint,14,opt,name=type,proto3,enum=bigone.Order_Type" json:"type,omitempty"`
	Operator     Order_Operator       `protobuf:"varint,15,opt,name=operator,proto3,enum=bigone.Order_Operator" json:"operator,omitempty"`
	Ioc          bool                 `protobuf:"varint,16,opt,name=ioc,proto3" json:"ioc,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{18}
}

func (x *Order) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Order) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Order) GetStopPrice() string {
	if x != nil {
		return x.StopPrice
	}
	return ""
}

func (x *Order) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Order) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *Order) GetSide() Order_Side {
	if x != nil {
		return x.Side
	}
	return Order_BID
}

func (x *Order) GetState() Order_State {
	if x != nil {
		return x.State
	}
	return Order_PENDING
}

func (x *Order) GetFilledAmount() string {
	if x != nil {
		return x.FilledAmount
	}
	return ""
}

func (x *Order) GetFilledFees() string {
	if x != nil {
		return x.FilledFees
	}
	return ""
}

func (x *Order) GetAvgDealPrice() string {
	if x != nil {
		return x.AvgDealPrice
	}
	return ""
}

func (x *Order) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Order) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Order) GetBusinessUnit() BusinessUnit {
	if x != nil {
		return x.BusinessUnit
	}
	return BusinessUnit_SPOT
}

func (x *Order) GetType() Order_Type {
	if x != nil {
		return x.Type
	}
	return Order_LIMIT
}

func (x *Order) GetOperator() Order_Operator {
	if x != nil {
		return x.Operator
	}
	return Order_LTE
}

func (x *Order) GetIoc() bool {
	if x != nil {
		return x.Ioc
	}
	return false
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset         string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"` // asset symbol
	Balance       string `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	LockedBalance string `protobuf:"bytes,3,opt,name=locked_balance,json=lockedBalance,proto3" json:"locked_balance,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{19}
}

func (x *Account) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *Account) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *Account) GetLockedBalance() string {
	if x != nil {
		return x.LockedBalance
	}
	return ""
}

type MarginAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset         string              `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"` // asset symbol
	Balance       string              `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	LockedBalance string              `protobuf:"bytes,3,opt,name=locked_balance,json=lockedBalance,proto3" json:"locked_balance,omitempty"`
	LoanBalance   string              `protobuf:"bytes,4,opt,name=loan_balance,json=loanBalance,proto3" json:"loan_balance,omitempty"`
	State         MarginAccount_State `protobuf:"varint,5,opt,name=state,proto3,enum=bigone.MarginAccount_State" json:"state,omitempty"`
}

func (x *MarginAccount) Reset() {
	*x = MarginAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarginAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarginAccount) ProtoMessage() {}

func (x *MarginAccount) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarginAccount.ProtoReflect.Descriptor instead.
func (*MarginAccount) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{20}
}

func (x *MarginAccount) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *MarginAccount) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *MarginAccount) GetLockedBalance() string {
	if x != nil {
		return x.LockedBalance
	}
	return ""
}

func (x *MarginAccount) GetLoanBalance() string {
	if x != nil {
		return x.LoanBalance
	}
	return ""
}

func (x *MarginAccount) GetState() MarginAccount_State {
	if x != nil {
		return x.State
	}
	return MarginAccount_NORMAL
}

type MarginMarketAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RiskRate         string         `protobuf:"bytes,2,opt,name=risk_rate,json=riskRate,proto3" json:"risk_rate,omitempty"`
	LiquidationPrice string         `protobuf:"bytes,3,opt,name=liquidation_price,json=liquidationPrice,proto3" json:"liquidation_price,omitempty"`
	Base             *MarginAccount `protobuf:"bytes,4,opt,name=base,proto3" json:"base,omitempty"`
	Quota            *MarginAccount `protobuf:"bytes,5,opt,name=quota,proto3" json:"quota,omitempty"`
}

func (x *MarginMarketAccount) Reset() {
	*x = MarginMarketAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarginMarketAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarginMarketAccount) ProtoMessage() {}

func (x *MarginMarketAccount) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarginMarketAccount.ProtoReflect.Descriptor instead.
func (*MarginMarketAccount) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{21}
}

func (x *MarginMarketAccount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MarginMarketAccount) GetRiskRate() string {
	if x != nil {
		return x.RiskRate
	}
	return ""
}

func (x *MarginMarketAccount) GetLiquidationPrice() string {
	if x != nil {
		return x.LiquidationPrice
	}
	return ""
}

func (x *MarginMarketAccount) GetBase() *MarginAccount {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *MarginMarketAccount) GetQuota() *MarginAccount {
	if x != nil {
		return x.Quota
	}
	return nil
}

type Candle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market string               `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Time   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Open   string               `protobuf:"bytes,3,opt,name=open,proto3" json:"open,omitempty"`
	High   string               `protobuf:"bytes,4,opt,name=high,proto3" json:"high,omitempty"`
	Low    string               `protobuf:"bytes,5,opt,name=low,proto3" json:"low,omitempty"`
	Close  string               `protobuf:"bytes,6,opt,name=close,proto3" json:"close,omitempty"`
	Volume string               `protobuf:"bytes,7,opt,name=volume,proto3" json:"volume,omitempty"`
	Period Candle_Period        `protobuf:"varint,8,opt,name=period,proto3,enum=bigone.Candle_Period" json:"period,omitempty"`
}

func (x *Candle) Reset() {
	*x = Candle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Candle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candle) ProtoMessage() {}

func (x *Candle) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candle.ProtoReflect.Descriptor instead.
func (*Candle) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{22}
}

func (x *Candle) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *Candle) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Candle) GetOpen() string {
	if x != nil {
		return x.Open
	}
	return ""
}

func (x *Candle) GetHigh() string {
	if x != nil {
		return x.High
	}
	return ""
}

func (x *Candle) GetLow() string {
	if x != nil {
		return x.Low
	}
	return ""
}

func (x *Candle) GetClose() string {
	if x != nil {
		return x.Close
	}
	return ""
}

func (x *Candle) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *Candle) GetPeriod() Candle_Period {
	if x != nil {
		return x.Period
	}
	return Candle_MIN1
}

type SubscribeMarketTickersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeMarketTickersRequest) Reset() {
	*x = SubscribeMarketTickersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeMarketTickersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeMarketTickersRequest) ProtoMessage() {}

func (x *SubscribeMarketTickersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeMarketTickersRequest.ProtoReflect.Descriptor instead.
func (*SubscribeMarketTickersRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{23}
}

type SubscribeExchangeRatesListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quote string   `protobuf:"bytes,1,opt,name=quote,proto3" json:"quote,omitempty"`
	Bases []string `protobuf:"bytes,2,rep,name=bases,proto3" json:"bases,omitempty"`
}

func (x *SubscribeExchangeRatesListRequest) Reset() {
	*x = SubscribeExchangeRatesListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeExchangeRatesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeExchangeRatesListRequest) ProtoMessage() {}

func (x *SubscribeExchangeRatesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeExchangeRatesListRequest.ProtoReflect.Descriptor instead.
func (*SubscribeExchangeRatesListRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{24}
}

func (x *SubscribeExchangeRatesListRequest) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

func (x *SubscribeExchangeRatesListRequest) GetBases() []string {
	if x != nil {
		return x.Bases
	}
	return nil
}

type UnsubscribeExchangeRatesListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnsubscribeExchangeRatesListRequest) Reset() {
	*x = UnsubscribeExchangeRatesListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeExchangeRatesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeExchangeRatesListRequest) ProtoMessage() {}

func (x *UnsubscribeExchangeRatesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeExchangeRatesListRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeExchangeRatesListRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{25}
}

type SubscribeMarketsTickerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Markets []string `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty"` // list of market name, empty means subscribing all markets
}

func (x *SubscribeMarketsTickerRequest) Reset() {
	*x = SubscribeMarketsTickerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeMarketsTickerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeMarketsTickerRequest) ProtoMessage() {}

func (x *SubscribeMarketsTickerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeMarketsTickerRequest.ProtoReflect.Descriptor instead.
func (*SubscribeMarketsTickerRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{26}
}

func (x *SubscribeMarketsTickerRequest) GetMarkets() []string {
	if x != nil {
		return x.Markets
	}
	return nil
}

type SubscribeMarketTradesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market string `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *SubscribeMarketTradesRequest) Reset() {
	*x = SubscribeMarketTradesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeMarketTradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeMarketTradesRequest) ProtoMessage() {}

func (x *SubscribeMarketTradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeMarketTradesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeMarketTradesRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{27}
}

func (x *SubscribeMarketTradesRequest) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *SubscribeMarketTradesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SubscribeMarketDepthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market string `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *SubscribeMarketDepthRequest) Reset() {
	*x = SubscribeMarketDepthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeMarketDepthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeMarketDepthRequest) ProtoMessage() {}

func (x *SubscribeMarketDepthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeMarketDepthRequest.ProtoReflect.Descriptor instead.
func (*SubscribeMarketDepthRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{28}
}

func (x *SubscribeMarketDepthRequest) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

type SubscribeMarketCandlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market string        `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Period Candle_Period `protobuf:"varint,2,opt,name=period,proto3,enum=bigone.Candle_Period" json:"period,omitempty"`
	Limit  int64         `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *SubscribeMarketCandlesRequest) Reset() {
	*x = SubscribeMarketCandlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeMarketCandlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeMarketCandlesRequest) ProtoMessage() {}

func (x *SubscribeMarketCandlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeMarketCandlesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeMarketCandlesRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{29}
}

func (x *SubscribeMarketCandlesRequest) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *SubscribeMarketCandlesRequest) GetPeriod() Candle_Period {
	if x != nil {
		return x.Period
	}
	return Candle_MIN1
}

func (x *SubscribeMarketCandlesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SubscribeViewerAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeViewerAccountsRequest) Reset() {
	*x = SubscribeViewerAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeViewerAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeViewerAccountsRequest) ProtoMessage() {}

func (x *SubscribeViewerAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeViewerAccountsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeViewerAccountsRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{30}
}

type SubscribeViewerMarginAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeViewerMarginAccountsRequest) Reset() {
	*x = SubscribeViewerMarginAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeViewerMarginAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeViewerMarginAccountsRequest) ProtoMessage() {}

func (x *SubscribeViewerMarginAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeViewerMarginAccountsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeViewerMarginAccountsRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{31}
}

type UnsubscribeViewerMarginAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnsubscribeViewerMarginAccountsRequest) Reset() {
	*x = UnsubscribeViewerMarginAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeViewerMarginAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeViewerMarginAccountsRequest) ProtoMessage() {}

func (x *UnsubscribeViewerMarginAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeViewerMarginAccountsRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeViewerMarginAccountsRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{32}
}

type SubscribeViewerOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market       string       `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	BusinessUnit BusinessUnit `protobuf:"varint,2,opt,name=business_unit,json=businessUnit,proto3,enum=bigone.BusinessUnit" json:"business_unit,omitempty"`
}

func (x *SubscribeViewerOrdersRequest) Reset() {
	*x = SubscribeViewerOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeViewerOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeViewerOrdersRequest) ProtoMessage() {}

func (x *SubscribeViewerOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeViewerOrdersRequest.ProtoReflect.Descriptor instead.
func (*SubscribeViewerOrdersRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{33}
}

func (x *SubscribeViewerOrdersRequest) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *SubscribeViewerOrdersRequest) GetBusinessUnit() BusinessUnit {
	if x != nil {
		return x.BusinessUnit
	}
	return BusinessUnit_SPOT
}

type UnsubscribeMarketsTickerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Markets []string `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty"` // list of market name, empty means unsubscribing all markets
}

func (x *UnsubscribeMarketsTickerRequest) Reset() {
	*x = UnsubscribeMarketsTickerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeMarketsTickerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeMarketsTickerRequest) ProtoMessage() {}

func (x *UnsubscribeMarketsTickerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeMarketsTickerRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeMarketsTickerRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{34}
}

func (x *UnsubscribeMarketsTickerRequest) GetMarkets() []string {
	if x != nil {
		return x.Markets
	}
	return nil
}

type UnsubscribeMarketTickersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnsubscribeMarketTickersRequest) Reset() {
	*x = UnsubscribeMarketTickersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeMarketTickersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeMarketTickersRequest) ProtoMessage() {}

func (x *UnsubscribeMarketTickersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeMarketTickersRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeMarketTickersRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{35}
}

type UnsubscribeMarketTradesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market string `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *UnsubscribeMarketTradesRequest) Reset() {
	*x = UnsubscribeMarketTradesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeMarketTradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeMarketTradesRequest) ProtoMessage() {}

func (x *UnsubscribeMarketTradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeMarketTradesRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeMarketTradesRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{36}
}

func (x *UnsubscribeMarketTradesRequest) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

type UnsubscribeMarketDepthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market string `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *UnsubscribeMarketDepthRequest) Reset() {
	*x = UnsubscribeMarketDepthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeMarketDepthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeMarketDepthRequest) ProtoMessage() {}

func (x *UnsubscribeMarketDepthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeMarketDepthRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeMarketDepthRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{37}
}

func (x *UnsubscribeMarketDepthRequest) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

type UnsubscribeMarketCandlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market string        `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Period Candle_Period `protobuf:"varint,2,opt,name=period,proto3,enum=bigone.Candle_Period" json:"period,omitempty"`
}

func (x *UnsubscribeMarketCandlesRequest) Reset() {
	*x = UnsubscribeMarketCandlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeMarketCandlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeMarketCandlesRequest) ProtoMessage() {}

func (x *UnsubscribeMarketCandlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeMarketCandlesRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeMarketCandlesRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{38}
}

func (x *UnsubscribeMarketCandlesRequest) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *UnsubscribeMarketCandlesRequest) GetPeriod() Candle_Period {
	if x != nil {
		return x.Period
	}
	return Candle_MIN1
}

type UnsubscribeViewerAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnsubscribeViewerAccountsRequest) Reset() {
	*x = UnsubscribeViewerAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeViewerAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeViewerAccountsRequest) ProtoMessage() {}

func (x *UnsubscribeViewerAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeViewerAccountsRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeViewerAccountsRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{39}
}

type UnsubscribeViewerOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market       string       `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	BusinessUnit BusinessUnit `protobuf:"varint,2,opt,name=business_unit,json=businessUnit,proto3,enum=bigone.BusinessUnit" json:"business_unit,omitempty"`
}

func (x *UnsubscribeViewerOrdersRequest) Reset() {
	*x = UnsubscribeViewerOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeViewerOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeViewerOrdersRequest) ProtoMessage() {}

func (x *UnsubscribeViewerOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeViewerOrdersRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeViewerOrdersRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{40}
}

func (x *UnsubscribeViewerOrdersRequest) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *UnsubscribeViewerOrdersRequest) GetBusinessUnit() BusinessUnit {
	if x != nil {
		return x.BusinessUnit
	}
	return BusinessUnit_SPOT
}

type AuthenticateCustomerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	DeviceId string `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *AuthenticateCustomerRequest) Reset() {
	*x = AuthenticateCustomerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateCustomerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateCustomerRequest) ProtoMessage() {}

func (x *AuthenticateCustomerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateCustomerRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateCustomerRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{41}
}

func (x *AuthenticateCustomerRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AuthenticateCustomerRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type CreateOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price             string     `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`                          // decimal or "MARKET"
	StopPrice         string     `protobuf:"bytes,2,opt,name=stop_price,json=stopPrice,proto3" json:"stop_price,omitempty"` // decimal or empty
	Amount            string     `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`                        // decimal non null
	Market            string     `protobuf:"bytes,4,opt,name=market,proto3" json:"market,omitempty"`                        // market name
	Side              Order_Side `protobuf:"varint,5,opt,name=side,proto3,enum=bigone.Order_Side" json:"side,omitempty"`
	Hidden            bool       `protobuf:"varint,6,opt,name=hidden,proto3" json:"hidden,omitempty"`
	ImmediateOrCancel bool       `protobuf:"varint,7,opt,name=immediate_or_cancel,json=immediateOrCancel,proto3" json:"immediate_or_cancel,omitempty"`
}

func (x *CreateOrderRequest) Reset() {
	*x = CreateOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderRequest) ProtoMessage() {}

func (x *CreateOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateOrderRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{42}
}

func (x *CreateOrderRequest) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CreateOrderRequest) GetStopPrice() string {
	if x != nil {
		return x.StopPrice
	}
	return ""
}

func (x *CreateOrderRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CreateOrderRequest) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *CreateOrderRequest) GetSide() Order_Side {
	if x != nil {
		return x.Side
	}
	return Order_BID
}

func (x *CreateOrderRequest) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *CreateOrderRequest) GetImmediateOrCancel() bool {
	if x != nil {
		return x.ImmediateOrCancel
	}
	return false
}

type CancelOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *CancelOrderRequest) Reset() {
	*x = CancelOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderRequest) ProtoMessage() {}

func (x *CancelOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderRequest.ProtoReflect.Descriptor instead.
func (*CancelOrderRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{43}
}

func (x *CancelOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type CancelAllOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Markets []string `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty"` // list of market name, empty means cancel all markets' orders
}

func (x *CancelAllOrdersRequest) Reset() {
	*x = CancelAllOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelAllOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelAllOrdersRequest) ProtoMessage() {}

func (x *CancelAllOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelAllOrdersRequest.ProtoReflect.Descriptor instead.
func (*CancelAllOrdersRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{44}
}

func (x *CancelAllOrdersRequest) GetMarkets() []string {
	if x != nil {
		return x.Markets
	}
	return nil
}

type ListMarketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMarketsRequest) Reset() {
	*x = ListMarketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMarketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarketsRequest) ProtoMessage() {}

func (x *ListMarketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarketsRequest.ProtoReflect.Descriptor instead.
func (*ListMarketsRequest) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{45}
}

type TickersSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickers []*Ticker `protobuf:"bytes,1,rep,name=tickers,proto3" json:"tickers,omitempty"`
}

func (x *TickersSnapshot) Reset() {
	*x = TickersSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickersSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickersSnapshot) ProtoMessage() {}

func (x *TickersSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickersSnapshot.ProtoReflect.Descriptor instead.
func (*TickersSnapshot) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{46}
}

func (x *TickersSnapshot) GetTickers() []*Ticker {
	if x != nil {
		return x.Tickers
	}
	return nil
}

type TickerUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticker *Ticker `protobuf:"bytes,1,opt,name=ticker,proto3" json:"ticker,omitempty"`
}

func (x *TickerUpdate) Reset() {
	*x = TickerUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickerUpdate) ProtoMessage() {}

func (x *TickerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickerUpdate.ProtoReflect.Descriptor instead.
func (*TickerUpdate) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{47}
}

func (x *TickerUpdate) GetTicker() *Ticker {
	if x != nil {
		return x.Ticker
	}
	return nil
}

type TradesSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trades []*Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
}

func (x *TradesSnapshot) Reset() {
	*x = TradesSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradesSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradesSnapshot) ProtoMessage() {}

func (x *TradesSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradesSnapshot.ProtoReflect.Descriptor instead.
func (*TradesSnapshot) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{48}
}

func (x *TradesSnapshot) GetTrades() []*Trade {
	if x != nil {
		return x.Trades
	}
	return nil
}

type TradeUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trade *Trade `protobuf:"bytes,1,opt,name=trade,proto3" json:"trade,omitempty"`
}

func (x *TradeUpdate) Reset() {
	*x = TradeUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeUpdate) ProtoMessage() {}

func (x *TradeUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeUpdate.ProtoReflect.Descriptor instead.
func (*TradeUpdate) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{49}
}

func (x *TradeUpdate) GetTrade() *Trade {
	if x != nil {
		return x.Trade
	}
	return nil
}

type DepthSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depth    *Depth `protobuf:"bytes,1,opt,name=depth,proto3" json:"depth,omitempty"`
	ChangeId uint64 `protobuf:"varint,2,opt,name=change_id,json=changeId,proto3" json:"change_id,omitempty"`
}

func (x *DepthSnapshot) Reset() {
	*x = DepthSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepthSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepthSnapshot) ProtoMessage() {}

func (x *DepthSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepthSnapshot.ProtoReflect.Descriptor instead.
func (*DepthSnapshot) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{50}
}

func (x *DepthSnapshot) GetDepth() *Depth {
	if x != nil {
		return x.Depth
	}
	return nil
}

func (x *DepthSnapshot) GetChangeId() uint64 {
	if x != nil {
		return x.ChangeId
	}
	return 0
}

type DepthUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depth    *Depth `protobuf:"bytes,1,opt,name=depth,proto3" json:"depth,omitempty"`
	ChangeId uint64 `protobuf:"varint,2,opt,name=change_id,json=changeId,proto3" json:"change_id,omitempty"`
}

func (x *DepthUpdate) Reset() {
	*x = DepthUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepthUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepthUpdate) ProtoMessage() {}

func (x *DepthUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepthUpdate.ProtoReflect.Descriptor instead.
func (*DepthUpdate) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{51}
}

func (x *DepthUpdate) GetDepth() *Depth {
	if x != nil {
		return x.Depth
	}
	return nil
}

func (x *DepthUpdate) GetChangeId() uint64 {
	if x != nil {
		return x.ChangeId
	}
	return 0
}

type AccountsSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *AccountsSnapshot) Reset() {
	*x = AccountsSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountsSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountsSnapshot) ProtoMessage() {}

func (x *AccountsSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountsSnapshot.ProtoReflect.Descriptor instead.
func (*AccountsSnapshot) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{52}
}

func (x *AccountsSnapshot) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type AccountUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *AccountUpdate) Reset() {
	*x = AccountUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountUpdate) ProtoMessage() {}

func (x *AccountUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountUpdate.ProtoReflect.Descriptor instead.
func (*AccountUpdate) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{53}
}

func (x *AccountUpdate) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type MarginAccountsSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*MarginMarketAccount `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *MarginAccountsSnapshot) Reset() {
	*x = MarginAccountsSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarginAccountsSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarginAccountsSnapshot) ProtoMessage() {}

func (x *MarginAccountsSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarginAccountsSnapshot.ProtoReflect.Descriptor instead.
func (*MarginAccountsSnapshot) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{54}
}

func (x *MarginAccountsSnapshot) GetAccounts() []*MarginMarketAccount {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type MarginAccountUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *MarginMarketAccount `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *MarginAccountUpdate) Reset() {
	*x = MarginAccountUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarginAccountUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarginAccountUpdate) ProtoMessage() {}

func (x *MarginAccountUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarginAccountUpdate.ProtoReflect.Descriptor instead.
func (*MarginAccountUpdate) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{55}
}

func (x *MarginAccountUpdate) GetAccount() *MarginMarketAccount {
	if x != nil {
		return x.Account
	}
	return nil
}

type CandlesSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Candles []*Candle `protobuf:"bytes,1,rep,name=candles,proto3" json:"candles,omitempty"`
}

func (x *CandlesSnapshot) Reset() {
	*x = CandlesSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CandlesSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandlesSnapshot) ProtoMessage() {}

func (x *CandlesSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandlesSnapshot.ProtoReflect.Descriptor instead.
func (*CandlesSnapshot) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{56}
}

func (x *CandlesSnapshot) GetCandles() []*Candle {
	if x != nil {
		return x.Candles
	}
	return nil
}

type CandleUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Candle *Candle `protobuf:"bytes,1,opt,name=candle,proto3" json:"candle,omitempty"`
}

func (x *CandleUpdate) Reset() {
	*x = CandleUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CandleUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandleUpdate) ProtoMessage() {}

func (x *CandleUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandleUpdate.ProtoReflect.Descriptor instead.
func (*CandleUpdate) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{57}
}

func (x *CandleUpdate) GetCandle() *Candle {
	if x != nil {
		return x.Candle
	}
	return nil
}

type OrdersSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *OrdersSnapshot) Reset() {
	*x = OrdersSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrdersSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdersSnapshot) ProtoMessage() {}

func (x *OrdersSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdersSnapshot.ProtoReflect.Descriptor instead.
func (*OrdersSnapshot) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{58}
}

func (x *OrdersSnapshot) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

type OrderUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order *Order `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *OrderUpdate) Reset() {
	*x = OrderUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderUpdate) ProtoMessage() {}

func (x *OrderUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderUpdate.ProtoReflect.Descriptor instead.
func (*OrderUpdate) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{59}
}

func (x *OrderUpdate) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

type ListMarketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Markets []*Market `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty"`
}

func (x *ListMarketsResponse) Reset() {
	*x = ListMarketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMarketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarketsResponse) ProtoMessage() {}

func (x *ListMarketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarketsResponse.ProtoReflect.Descriptor instead.
func (*ListMarketsResponse) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{60}
}

func (x *ListMarketsResponse) GetMarkets() []*Market {
	if x != nil {
		return x.Markets
	}
	return nil
}

type ExchangeRatesListSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuoteAsset string               `protobuf:"bytes,1,opt,name=quote_asset,json=quoteAsset,proto3" json:"quote_asset,omitempty"`
	BaseAssets []*ExchangeRate      `protobuf:"bytes,2,rep,name=base_assets,json=baseAssets,proto3" json:"base_assets,omitempty"`
	UpdatedAt  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ExchangeRatesListSnapshot) Reset() {
	*x = ExchangeRatesListSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeRatesListSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRatesListSnapshot) ProtoMessage() {}

func (x *ExchangeRatesListSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRatesListSnapshot.ProtoReflect.Descriptor instead.
func (*ExchangeRatesListSnapshot) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{61}
}

func (x *ExchangeRatesListSnapshot) GetQuoteAsset() string {
	if x != nil {
		return x.QuoteAsset
	}
	return ""
}

func (x *ExchangeRatesListSnapshot) GetBaseAssets() []*ExchangeRate {
	if x != nil {
		return x.BaseAssets
	}
	return nil
}

func (x *ExchangeRatesListSnapshot) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ExchangeRatesListUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuoteAsset string               `protobuf:"bytes,1,opt,name=quote_asset,json=quoteAsset,proto3" json:"quote_asset,omitempty"`
	BaseAssets []*ExchangeRate      `protobuf:"bytes,2,rep,name=base_assets,json=baseAssets,proto3" json:"base_assets,omitempty"`
	UpdatedAt  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ExchangeRatesListUpdate) Reset() {
	*x = ExchangeRatesListUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeRatesListUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRatesListUpdate) ProtoMessage() {}

func (x *ExchangeRatesListUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRatesListUpdate.ProtoReflect.Descriptor instead.
func (*ExchangeRatesListUpdate) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{62}
}

func (x *ExchangeRatesListUpdate) GetQuoteAsset() string {
	if x != nil {
		return x.QuoteAsset
	}
	return ""
}

func (x *ExchangeRatesListUpdate) GetBaseAssets() []*ExchangeRate {
	if x != nil {
		return x.BaseAssets
	}
	return nil
}

func (x *ExchangeRatesListUpdate) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ExchangeRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuoteAsset string               `protobuf:"bytes,1,opt,name=quote_asset,json=quoteAsset,proto3" json:"quote_asset,omitempty"`
	BaseAsset  string               `protobuf:"bytes,2,opt,name=base_asset,json=baseAsset,proto3" json:"base_asset,omitempty"`
	Price      string               `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	UpdatedAt  *timestamp.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ExchangeRate) Reset() {
	*x = ExchangeRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRate) ProtoMessage() {}

func (x *ExchangeRate) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRate.ProtoReflect.Descriptor instead.
func (*ExchangeRate) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{63}
}

func (x *ExchangeRate) GetQuoteAsset() string {
	if x != nil {
		return x.QuoteAsset
	}
	return ""
}

func (x *ExchangeRate) GetBaseAsset() string {
	if x != nil {
		return x.BaseAsset
	}
	return ""
}

func (x *ExchangeRate) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *ExchangeRate) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_websocket_proto protoreflect.FileDescriptor

var file_websocket_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x17, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x11, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x68,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70,
	0x69, 0x6e, 0x67, 0x12, 0x70, 0x0a, 0x20, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6d, 0x0a, 0x1f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x1e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62,
	0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x70, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x1b, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x70, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x70, 0x0a, 0x20, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x67,
	0x6f, 0x6e, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x1d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x73, 0x0a, 0x21, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f,
	0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6d, 0x0a, 0x1f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x76, 0x0a, 0x22, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x6b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x55, 0x6e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1f, 0x75,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x73, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x73,
	0x0a, 0x21, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x67, 0x6f,
	0x6e, 0x65, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x1e, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x70, 0x0a, 0x20, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x70, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1d, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x70, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x76, 0x0a, 0x22, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1f, 0x75, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x79, 0x0a,
	0x23, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x76, 0x69, 0x65,
	0x77, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x67,
	0x6f, 0x6e, 0x65, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56,
	0x69, 0x65, 0x77, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x20, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x73, 0x0a, 0x21, 0x75, 0x6e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x70, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x55, 0x6e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1e, 0x75,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x69, 0x0a,
	0x1d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x71,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1b, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x14, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x19, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x74, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69,
	0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x14, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x75, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x12, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x70, 0x0a, 0x20, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x76, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x76, 0x0a, 0x22, 0x75, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x77, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x55, 0x6e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1f,
	0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x86, 0x01, 0x0a, 0x28, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x76, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x78, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x24, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x69, 0x65,
	0x77, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x8c, 0x01, 0x0a, 0x2a, 0x75, 0x6e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x5f,
	0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x79, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x26, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x7d, 0x0a, 0x25, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x7a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x21, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x83, 0x01, 0x0a, 0x27, 0x75, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x7b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e,
	0x65, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x23, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x83, 0x01, 0x0a,
	0x27, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x73, 0x68,
	0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x7c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x23, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x89, 0x01, 0x0a, 0x29, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x7d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e,
	0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x25, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x09,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xfa, 0x0c, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x62, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x63, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65,
	0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x12, 0x32, 0x0a,
	0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x12, 0x44, 0x0a, 0x10, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x5f, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69,
	0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x5f, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x74, 0x68, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x67, 0x6f,
	0x6e, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x74, 0x68, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x12, 0x38, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x74, 0x68, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65,
	0x2e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0b,
	0x64, 0x65, 0x70, 0x74, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x11, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x48, 0x00, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x12, 0x3e, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62,
	0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x5f,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x63, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x70, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x51, 0x0a, 0x15, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x71, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x13, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x18, 0x6d, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x67, 0x6f,
	0x6e, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x16, 0x6d, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x12, 0x51, 0x0a, 0x15, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x73, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x13, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x64, 0x0a, 0x1c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x74, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62,
	0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48,
	0x00, 0x52, 0x19, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x6a, 0x0a, 0x1e,
	0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x75,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x1b, 0x66, 0x6c, 0x61,
	0x73, 0x68, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x61, 0x0a, 0x1b, 0x66, 0x6c, 0x61, 0x73,
	0x68, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x76, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x18, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x5e, 0x0a, 0x1a, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x77, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x17, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x61, 0x0a, 0x23, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x27, 0x0a, 0x25, 0x55, 0x6e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x97, 0x04, 0x0a, 0x12, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x28, 0x0a,
	0x10, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x61, 0x6c,
	0x65, 0x72, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x65,
	0x61, 0x6c, 0x65, 0x72, 0x43, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x30, 0x0a, 0x14, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61,
	0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x28, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x01, 0x22, 0x6d, 0x0a, 0x1b,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x4e, 0x0a, 0x15, 0x66,
	0x6c, 0x61, 0x73, 0x68, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x67,
	0x6f, 0x6e, 0x65, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x13, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x68, 0x0a, 0x18, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x4c, 0x0a, 0x14, 0x66, 0x6c, 0x61, 0x73, 0x68,
	0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x12, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x19, 0x0a, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x2e, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x0b, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x22, 0x06, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x22, 0x06, 0x0a, 0x04,
	0x50, 0x6f, 0x6e, 0x67, 0x22, 0xc4, 0x01, 0x0a, 0x06, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x53, 0x63, 0x61,
	0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x53, 0x63,
	0x61, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x69,
	0x6e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5b, 0x0a, 0x0a, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6f, 0x0a, 0x05, 0x44, 0x65, 0x70, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x61, 0x73, 0x6b,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65,
	0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x04, 0x61, 0x73, 0x6b,
	0x73, 0x12, 0x26, 0x0a, 0x04, 0x62, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x04, 0x62, 0x69, 0x64, 0x73, 0x22, 0xa0, 0x02, 0x0a, 0x06, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x03,
	0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x69, 0x67, 0x6f,
	0x6e, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x03, 0x61,
	0x73, 0x6b, 0x12, 0x24, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x69, 0x67, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c,
	0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x65, 0x72, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x61, 0x69,
	0x6c, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x22, 0xab, 0x02, 0x0a,
	0x05, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x6d, 0x61, 0x6b, 0x65, 0x72,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62,
	0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x6d, 0x61, 0x6b,
	0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x0b, 0x74, 0x61, 0x6b, 0x65, 0x72,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62,
	0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x74, 0x61, 0x6b,
	0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x0a, 0x74, 0x61, 0x6b, 0x65, 0x72,
	0x5f, 0x73, 0x69, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x62, 0x69,
	0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x52,
	0x09, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x22, 0x8e, 0x06, 0x0a, 0x05, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x6f, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x69, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64,
	0x65, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x46, 0x65,
	0x65, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x76, 0x67, 0x5f, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x76, 0x67, 0x44,
	0x65, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x0c, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x32, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6f, 0x63, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x69, 0x6f, 0x63, 0x22, 0x18, 0x0a, 0x04, 0x53, 0x69, 0x64, 0x65, 0x12,
	0x07, 0x0a, 0x03, 0x42, 0x49, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x4b, 0x10,
	0x01, 0x22, 0x3a, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x49, 0x4c, 0x4c, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x49, 0x52, 0x45, 0x44, 0x10, 0x03, 0x22, 0x3e, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x53, 0x54, 0x4f, 0x50, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b,
	0x53, 0x54, 0x4f, 0x50, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x10, 0x03, 0x22, 0x1c, 0x0a,
	0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x54, 0x45,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x54, 0x45, 0x10, 0x01, 0x22, 0x60, 0x0a, 0x07, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xf0, 0x01,
	0x0a, 0x0d, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f,
	0x61, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e,
	0x65, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x32, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10,
	0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x49, 0x51, 0x55, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x49, 0x45, 0x52, 0x43, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x22, 0xcb, 0x01, 0x0a, 0x13, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x69, 0x73, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x69, 0x73, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x4d, 0x61,
	0x72, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x22, 0xf5,
	0x02, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x67, 0x6f,
	0x6e, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x06, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x49, 0x4e, 0x31, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x4d, 0x49, 0x4e, 0x35, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x49, 0x4e, 0x31, 0x35,
	0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x49, 0x4e, 0x33, 0x30, 0x10, 0x03, 0x12, 0x09, 0x0a,
	0x05, 0x48, 0x4f, 0x55, 0x52, 0x31, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x4f, 0x55, 0x52,
	0x33, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x4f, 0x55, 0x52, 0x34, 0x10, 0x06, 0x12, 0x09,
	0x0a, 0x05, 0x48, 0x4f, 0x55, 0x52, 0x36, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x4f, 0x55,
	0x52, 0x31, 0x32, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x41, 0x59, 0x31, 0x10, 0x09, 0x12,
	0x09, 0x0a, 0x05, 0x57, 0x45, 0x45, 0x4b, 0x31, 0x10, 0x0a, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x4f,
	0x4e, 0x54, 0x48, 0x31, 0x10, 0x0b, 0x22, 0x1f, 0x0a, 0x1d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4f, 0x0a, 0x21, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x62, 0x61, 0x73, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x23, 0x55, 0x6e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x39, 0x0a, 0x1d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x73, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x4c, 0x0a, 0x1c, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x35, 0x0a, 0x1b, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x70, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22,
	0x7c, 0x0a, 0x1d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e,
	0x65, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52,
	0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x20, 0x0a,
	0x1e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x26, 0x0a, 0x24, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x28, 0x0a, 0x26, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x71, 0x0a, 0x1c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x55, 0x6e, 0x69, 0x74, 0x22, 0x3b, 0x0a, 0x1f, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x73, 0x22, 0x21, 0x0a, 0x1f, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x1e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x37,
	0x0a, 0x1d, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x44, 0x65, 0x70, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x68, 0x0a, 0x1f, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x22, 0x22, 0x0a, 0x20, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x73, 0x0a, 0x1e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12,
	0x39, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x0c, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x22, 0x50, 0x0a, 0x1b, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xe9, 0x01, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f,
	0x70, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6d, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x72, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x22, 0x2f, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x14, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x0f, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65,
	0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73,
	0x22, 0x36, 0x0a, 0x0c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x26, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x22, 0x37, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x69, 0x67,
	0x6f, 0x6e, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x22, 0x32, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x64, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x23, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x05,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x22, 0x51, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x74, 0x68, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x44,
	0x65, 0x70, 0x74, 0x68, 0x52, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x0b, 0x44, 0x65, 0x70, 0x74,
	0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e,
	0x44, 0x65, 0x70, 0x74, 0x68, 0x52, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x10, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x2b, 0x0a,
	0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x3a, 0x0a, 0x0d, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62,
	0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x16, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x12, 0x37, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x4c, 0x0a, 0x13, 0x4d, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x35, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x0f, 0x43, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x69,
	0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x07, 0x63, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x73, 0x22, 0x36, 0x0a, 0x0c, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x43, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x37, 0x0a, 0x0e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x25,
	0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x32, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x3f, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x19, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x17,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x62, 0x69, 0x67, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x0c, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0x24, 0x0a, 0x0c,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x08, 0x0a, 0x04,
	0x53, 0x50, 0x4f, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x52, 0x47, 0x49, 0x4e,
	0x10, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_websocket_proto_rawDescOnce sync.Once
	file_websocket_proto_rawDescData = file_websocket_proto_rawDesc
)

func file_websocket_proto_rawDescGZIP() []byte {
	file_websocket_proto_rawDescOnce.Do(func() {
		file_websocket_proto_rawDescData = protoimpl.X.CompressGZIP(file_websocket_proto_rawDescData)
	})
	return file_websocket_proto_rawDescData
}

var file_websocket_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_websocket_proto_msgTypes = make([]protoimpl.MessageInfo, 64)
var file_websocket_proto_goTypes = []interface{}{
	(BusinessUnit)(0),                              // 0: bigone.BusinessUnit
	(FlashExchangeOrder_Status)(0),                 // 1: bigone.FlashExchangeOrder.Status
	(Order_Side)(0),                                // 2: bigone.Order.Side
	(Order_State)(0),                               // 3: bigone.Order.State
	(Order_Type)(0),                                // 4: bigone.Order.Type
	(Order_Operator)(0),                            // 5: bigone.Order.Operator
	(MarginAccount_State)(0),                       // 6: bigone.MarginAccount.State
	(Candle_Period)(0),                             // 7: bigone.Candle.Period
	(*Request)(nil),                                // 8: bigone.Request
	(*Response)(nil),                               // 9: bigone.Response
	(*SubscribeFlashExchangeOrdersRequest)(nil),    // 10: bigone.SubscribeFlashExchangeOrdersRequest
	(*UnsubscribeFlashExchangeOrdersRequest)(nil),  // 11: bigone.UnsubscribeFlashExchangeOrdersRequest
	(*FlashExchangeOrder)(nil),                     // 12: bigone.FlashExchangeOrder
	(*FlashExchangeOrdersSnapshot)(nil),            // 13: bigone.FlashExchangeOrdersSnapshot
	(*FlashExchangeOrderUpdate)(nil),               // 14: bigone.FlashExchangeOrderUpdate
	(*Error)(nil),                                  // 15: bigone.Error
	(*Success)(nil),                                // 16: bigone.Success
	(*HeartbeatRequest)(nil),                       // 17: bigone.HeartbeatRequest
	(*Heartbeat)(nil),                              // 18: bigone.Heartbeat
	(*Ping)(nil),                                   // 19: bigone.Ping
	(*Pong)(nil),                                   // 20: bigone.Pong
	(*Market)(nil),                                 // 21: bigone.Market
	(*PriceLevel)(nil),                             // 22: bigone.PriceLevel
	(*Depth)(nil),                                  // 23: bigone.Depth
	(*Ticker)(nil),                                 // 24: bigone.Ticker
	(*Trade)(nil),                                  // 25: bigone.Trade
	(*Order)(nil),                                  // 26: bigone.Order
	(*Account)(nil),                                // 27: bigone.Account
	(*MarginAccount)(nil),                          // 28: bigone.MarginAccount
	(*MarginMarketAccount)(nil),                    // 29: bigone.MarginMarketAccount
	(*Candle)(nil),                                 // 30: bigone.Candle
	(*SubscribeMarketTickersRequest)(nil),          // 31: bigone.SubscribeMarketTickersRequest
	(*SubscribeExchangeRatesListRequest)(nil),      // 32: bigone.SubscribeExchangeRatesListRequest
	(*UnsubscribeExchangeRatesListRequest)(nil),    // 33: bigone.UnsubscribeExchangeRatesListRequest
	(*SubscribeMarketsTickerRequest)(nil),          // 34: bigone.SubscribeMarketsTickerRequest
	(*SubscribeMarketTradesRequest)(nil),           // 35: bigone.SubscribeMarketTradesRequest
	(*SubscribeMarketDepthRequest)(nil),            // 36: bigone.SubscribeMarketDepthRequest
	(*SubscribeMarketCandlesRequest)(nil),          // 37: bigone.SubscribeMarketCandlesRequest
	(*SubscribeViewerAccountsRequest)(nil),         // 38: bigone.SubscribeViewerAccountsRequest
	(*SubscribeViewerMarginAccountsRequest)(nil),   // 39: bigone.SubscribeViewerMarginAccountsRequest
	(*UnsubscribeViewerMarginAccountsRequest)(nil), // 40: bigone.UnsubscribeViewerMarginAccountsRequest
	(*SubscribeViewerOrdersRequest)(nil),           // 41: bigone.SubscribeViewerOrdersRequest
	(*UnsubscribeMarketsTickerRequest)(nil),        // 42: bigone.UnsubscribeMarketsTickerRequest
	(*UnsubscribeMarketTickersRequest)(nil),        // 43: bigone.UnsubscribeMarketTickersRequest
	(*UnsubscribeMarketTradesRequest)(nil),         // 44: bigone.UnsubscribeMarketTradesRequest
	(*UnsubscribeMarketDepthRequest)(nil),          // 45: bigone.UnsubscribeMarketDepthRequest
	(*UnsubscribeMarketCandlesRequest)(nil),        // 46: bigone.UnsubscribeMarketCandlesRequest
	(*UnsubscribeViewerAccountsRequest)(nil),       // 47: bigone.UnsubscribeViewerAccountsRequest
	(*UnsubscribeViewerOrdersRequest)(nil),         // 48: bigone.UnsubscribeViewerOrdersRequest
	(*AuthenticateCustomerRequest)(nil),            // 49: bigone.AuthenticateCustomerRequest
	(*CreateOrderRequest)(nil),                     // 50: bigone.CreateOrderRequest
	(*CancelOrderRequest)(nil),                     // 51: bigone.CancelOrderRequest
	(*CancelAllOrdersRequest)(nil),                 // 52: bigone.CancelAllOrdersRequest
	(*ListMarketsRequest)(nil),                     // 53: bigone.ListMarketsRequest
	(*TickersSnapshot)(nil),                        // 54: bigone.TickersSnapshot
	(*TickerUpdate)(nil),                           // 55: bigone.TickerUpdate
	(*TradesSnapshot)(nil),                         // 56: bigone.TradesSnapshot
	(*TradeUpdate)(nil),                            // 57: bigone.TradeUpdate
	(*DepthSnapshot)(nil),                          // 58: bigone.DepthSnapshot
	(*DepthUpdate)(nil),                            // 59: bigone.DepthUpdate
	(*AccountsSnapshot)(nil),                       // 60: bigone.AccountsSnapshot
	(*AccountUpdate)(nil),                          // 61: bigone.AccountUpdate
	(*MarginAccountsSnapshot)(nil),                 // 62: bigone.MarginAccountsSnapshot
	(*MarginAccountUpdate)(nil),                    // 63: bigone.MarginAccountUpdate
	(*CandlesSnapshot)(nil),                        // 64: bigone.CandlesSnapshot
	(*CandleUpdate)(nil),                           // 65: bigone.CandleUpdate
	(*OrdersSnapshot)(nil),                         // 66: bigone.OrdersSnapshot
	(*OrderUpdate)(nil),                            // 67: bigone.OrderUpdate
	(*ListMarketsResponse)(nil),                    // 68: bigone.ListMarketsResponse
	(*ExchangeRatesListSnapshot)(nil),              // 69: bigone.ExchangeRatesListSnapshot
	(*ExchangeRatesListUpdate)(nil),                // 70: bigone.ExchangeRatesListUpdate
	(*ExchangeRate)(nil),                           // 71: bigone.ExchangeRate
	(*timestamp.Timestamp)(nil),                    // 72: google.protobuf.Timestamp
}
var file_websocket_proto_depIdxs = []int32{
	17,  // 0: bigone.Request.heartbeat_request:type_name -> bigone.HeartbeatRequest
	19,  // 1: bigone.Request.ping:type_name -> bigone.Ping
	34,  // 2: bigone.Request.subscribe_markets_ticker_request:type_name -> bigone.SubscribeMarketsTickerRequest
	35,  // 3: bigone.Request.subscribe_market_trades_request:type_name -> bigone.SubscribeMarketTradesRequest
	36,  // 4: bigone.Request.subscribe_market_depth_request:type_name -> bigone.SubscribeMarketDepthRequest
	37,  // 5: bigone.Request.subscribe_market_candles_request:type_name -> bigone.SubscribeMarketCandlesRequest
	38,  // 6: bigone.Request.subscribe_viewer_accounts_request:type_name -> bigone.SubscribeViewerAccountsRequest
	41,  // 7: bigone.Request.subscribe_viewer_orders_request:type_name -> bigone.SubscribeViewerOrdersRequest
	42,  // 8: bigone.Request.unsubscribe_markets_ticker_request:type_name -> bigone.UnsubscribeMarketsTickerRequest
	44,  // 9: bigone.Request.unsubscribe_market_trades_request:type_name -> bigone.UnsubscribeMarketTradesRequest
	45,  // 10: bigone.Request.unsubscribe_market_depth_request:type_name -> bigone.UnsubscribeMarketDepthRequest
	46,  // 11: bigone.Request.unsubscribe_market_candles_request:type_name -> bigone.UnsubscribeMarketCandlesRequest
	47,  // 12: bigone.Request.unsubscribe_viewer_accounts_request:type_name -> bigone.UnsubscribeViewerAccountsRequest
	48,  // 13: bigone.Request.unsubscribe_viewer_orders_request:type_name -> bigone.UnsubscribeViewerOrdersRequest
	49,  // 14: bigone.Request.authenticate_customer_request:type_name -> bigone.AuthenticateCustomerRequest
	50,  // 15: bigone.Request.create_order_request:type_name -> bigone.CreateOrderRequest
	51,  // 16: bigone.Request.cancel_order_request:type_name -> bigone.CancelOrderRequest
	52,  // 17: bigone.Request.cancel_all_orders_request:type_name -> bigone.CancelAllOrdersRequest
	53,  // 18: bigone.Request.list_markets_request:type_name -> bigone.ListMarketsRequest
	31,  // 19: bigone.Request.subscribe_market_tickers_request:type_name -> bigone.SubscribeMarketTickersRequest
	43,  // 20: bigone.Request.unsubscribe_market_tickers_request:type_name -> bigone.UnsubscribeMarketTickersRequest
	39,  // 21: bigone.Request.subscribe_viewer_margin_accounts_request:type_name -> bigone.SubscribeViewerMarginAccountsRequest
	40,  // 22: bigone.Request.unsubscribe_viewer_margin_accounts_request:type_name -> bigone.UnsubscribeViewerMarginAccountsRequest
	32,  // 23: bigone.Request.subscribe_exchange_rates_list_request:type_name -> bigone.SubscribeExchangeRatesListRequest
	33,  // 24: bigone.Request.unsubscribe_exchange_rates_list_request:type_name -> bigone.UnsubscribeExchangeRatesListRequest
	10,  // 25: bigone.Request.subscribe_flash_exchange_orders_request:type_name -> bigone.SubscribeFlashExchangeOrdersRequest
	11,  // 26: bigone.Request.unsubscribe_flash_exchange_orders_request:type_name -> bigone.UnsubscribeFlashExchangeOrdersRequest
	16,  // 27: bigone.Response.success:type_name -> bigone.Success
	15,  // 28: bigone.Response.error:type_name -> bigone.Error
	20,  // 29: bigone.Response.pong:type_name -> bigone.Pong
	18,  // 30: bigone.Response.heartbeat:type_name -> bigone.Heartbeat
	54,  // 31: bigone.Response.tickers_snapshot:type_name -> bigone.TickersSnapshot
	55,  // 32: bigone.Response.ticker_update:type_name -> bigone.TickerUpdate
	56,  // 33: bigone.Response.trades_snapshot:type_name -> bigone.TradesSnapshot
	57,  // 34: bigone.Response.trade_update:type_name -> bigone.TradeUpdate
	58,  // 35: bigone.Response.depth_snapshot:type_name -> bigone.DepthSnapshot
	59,  // 36: bigone.Response.depth_update:type_name -> bigone.DepthUpdate
	60,  // 37: bigone.Response.accounts_snapshot:type_name -> bigone.AccountsSnapshot
	61,  // 38: bigone.Response.account_update:type_name -> bigone.AccountUpdate
	64,  // 39: bigone.Response.candles_snapshot:type_name -> bigone.CandlesSnapshot
	65,  // 40: bigone.Response.candle_update:type_name -> bigone.CandleUpdate
	66,  // 41: bigone.Response.orders_snapshot:type_name -> bigone.OrdersSnapshot
	67,  // 42: bigone.Response.order_update:type_name -> bigone.OrderUpdate
	68,  // 43: bigone.Response.list_markets_response:type_name -> bigone.ListMarketsResponse
	62,  // 44: bigone.Response.margin_accounts_snapshot:type_name -> bigone.MarginAccountsSnapshot
	63,  // 45: bigone.Response.margin_account_update:type_name -> bigone.MarginAccountUpdate
	69,  // 46: bigone.Response.exchange_rates_list_snapshot:type_name -> bigone.ExchangeRatesListSnapshot
	13,  // 47: bigone.Response.flash_exchange_orders_snapshot:type_name -> bigone.FlashExchangeOrdersSnapshot
	14,  // 48: bigone.Response.flash_exchange_order_update:type_name -> bigone.FlashExchangeOrderUpdate
	70,  // 49: bigone.Response.exchange_rates_list_update:type_name -> bigone.ExchangeRatesListUpdate
	1,   // 50: bigone.FlashExchangeOrder.status:type_name -> bigone.FlashExchangeOrder.Status
	72,  // 51: bigone.FlashExchangeOrder.created_at:type_name -> google.protobuf.Timestamp
	72,  // 52: bigone.FlashExchangeOrder.updated_at:type_name -> google.protobuf.Timestamp
	12,  // 53: bigone.FlashExchangeOrdersSnapshot.flash_exchange_orders:type_name -> bigone.FlashExchangeOrder
	12,  // 54: bigone.FlashExchangeOrderUpdate.flash_exchange_order:type_name -> bigone.FlashExchangeOrder
	22,  // 55: bigone.Depth.asks:type_name -> bigone.PriceLevel
	22,  // 56: bigone.Depth.bids:type_name -> bigone.PriceLevel
	22,  // 57: bigone.Ticker.ask:type_name -> bigone.PriceLevel
	22,  // 58: bigone.Ticker.bid:type_name -> bigone.PriceLevel
	72,  // 59: bigone.Trade.created_at:type_name -> google.protobuf.Timestamp
	26,  // 60: bigone.Trade.maker_order:type_name -> bigone.Order
	26,  // 61: bigone.Trade.taker_order:type_name -> bigone.Order
	2,   // 62: bigone.Trade.taker_side:type_name -> bigone.Order.Side
	2,   // 63: bigone.Order.side:type_name -> bigone.Order.Side
	3,   // 64: bigone.Order.state:type_name -> bigone.Order.State
	72,  // 65: bigone.Order.created_at:type_name -> google.protobuf.Timestamp
	72,  // 66: bigone.Order.updated_at:type_name -> google.protobuf.Timestamp
	0,   // 67: bigone.Order.business_unit:type_name -> bigone.BusinessUnit
	4,   // 68: bigone.Order.type:type_name -> bigone.Order.Type
	5,   // 69: bigone.Order.operator:type_name -> bigone.Order.Operator
	6,   // 70: bigone.MarginAccount.state:type_name -> bigone.MarginAccount.State
	28,  // 71: bigone.MarginMarketAccount.base:type_name -> bigone.MarginAccount
	28,  // 72: bigone.MarginMarketAccount.quota:type_name -> bigone.MarginAccount
	72,  // 73: bigone.Candle.time:type_name -> google.protobuf.Timestamp
	7,   // 74: bigone.Candle.period:type_name -> bigone.Candle.Period
	7,   // 75: bigone.SubscribeMarketCandlesRequest.period:type_name -> bigone.Candle.Period
	0,   // 76: bigone.SubscribeViewerOrdersRequest.business_unit:type_name -> bigone.BusinessUnit
	7,   // 77: bigone.UnsubscribeMarketCandlesRequest.period:type_name -> bigone.Candle.Period
	0,   // 78: bigone.UnsubscribeViewerOrdersRequest.business_unit:type_name -> bigone.BusinessUnit
	2,   // 79: bigone.CreateOrderRequest.side:type_name -> bigone.Order.Side
	24,  // 80: bigone.TickersSnapshot.tickers:type_name -> bigone.Ticker
	24,  // 81: bigone.TickerUpdate.ticker:type_name -> bigone.Ticker
	25,  // 82: bigone.TradesSnapshot.trades:type_name -> bigone.Trade
	25,  // 83: bigone.TradeUpdate.trade:type_name -> bigone.Trade
	23,  // 84: bigone.DepthSnapshot.depth:type_name -> bigone.Depth
	23,  // 85: bigone.DepthUpdate.depth:type_name -> bigone.Depth
	27,  // 86: bigone.AccountsSnapshot.accounts:type_name -> bigone.Account
	27,  // 87: bigone.AccountUpdate.account:type_name -> bigone.Account
	29,  // 88: bigone.MarginAccountsSnapshot.accounts:type_name -> bigone.MarginMarketAccount
	29,  // 89: bigone.MarginAccountUpdate.account:type_name -> bigone.MarginMarketAccount
	30,  // 90: bigone.CandlesSnapshot.candles:type_name -> bigone.Candle
	30,  // 91: bigone.CandleUpdate.candle:type_name -> bigone.Candle
	26,  // 92: bigone.OrdersSnapshot.orders:type_name -> bigone.Order
	26,  // 93: bigone.OrderUpdate.order:type_name -> bigone.Order
	21,  // 94: bigone.ListMarketsResponse.markets:type_name -> bigone.Market
	71,  // 95: bigone.ExchangeRatesListSnapshot.base_assets:type_name -> bigone.ExchangeRate
	72,  // 96: bigone.ExchangeRatesListSnapshot.updated_at:type_name -> google.protobuf.Timestamp
	71,  // 97: bigone.ExchangeRatesListUpdate.base_assets:type_name -> bigone.ExchangeRate
	72,  // 98: bigone.ExchangeRatesListUpdate.updated_at:type_name -> google.protobuf.Timestamp
	72,  // 99: bigone.ExchangeRate.updated_at:type_name -> google.protobuf.Timestamp
	100, // [100:100] is the sub-list for method output_type
	100, // [100:100] is the sub-list for method input_type
	100, // [100:100] is the sub-list for extension type_name
	100, // [100:100] is the sub-list for extension extendee
	0,   // [0:100] is the sub-list for field type_name
}

func init() { file_websocket_proto_init() }
func file_websocket_proto_init() {
	if File_websocket_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_websocket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeFlashExchangeOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeFlashExchangeOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlashExchangeOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlashExchangeOrdersSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlashExchangeOrderUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Heartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Market); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Depth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarginAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarginMarketAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Candle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeMarketTickersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeExchangeRatesListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeExchangeRatesListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeMarketsTickerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeMarketTradesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeMarketDepthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeMarketCandlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeViewerAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeViewerMarginAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeViewerMarginAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeViewerOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeMarketsTickerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeMarketTickersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeMarketTradesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeMarketDepthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeMarketCandlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeViewerAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeViewerOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateCustomerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelAllOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMarketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickersSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickerUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradesSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepthSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepthUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountsSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarginAccountsSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarginAccountUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CandlesSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CandleUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrdersSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMarketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeRatesListSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeRatesListUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_websocket_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Request_HeartbeatRequest)(nil),
		(*Request_Ping)(nil),
		(*Request_SubscribeMarketsTickerRequest)(nil),
		(*Request_SubscribeMarketTradesRequest)(nil),
		(*Request_SubscribeMarketDepthRequest)(nil),
		(*Request_SubscribeMarketCandlesRequest)(nil),
		(*Request_SubscribeViewerAccountsRequest)(nil),
		(*Request_SubscribeViewerOrdersRequest)(nil),
		(*Request_UnsubscribeMarketsTickerRequest)(nil),
		(*Request_UnsubscribeMarketTradesRequest)(nil),
		(*Request_UnsubscribeMarketDepthRequest)(nil),
		(*Request_UnsubscribeMarketCandlesRequest)(nil),
		(*Request_UnsubscribeViewerAccountsRequest)(nil),
		(*Request_UnsubscribeViewerOrdersRequest)(nil),
		(*Request_AuthenticateCustomerRequest)(nil),
		(*Request_CreateOrderRequest)(nil),
		(*Request_CancelOrderRequest)(nil),
		(*Request_CancelAllOrdersRequest)(nil),
		(*Request_ListMarketsRequest)(nil),
		(*Request_SubscribeMarketTickersRequest)(nil),
		(*Request_UnsubscribeMarketTickersRequest)(nil),
		(*Request_SubscribeViewerMarginAccountsRequest)(nil),
		(*Request_UnsubscribeViewerMarginAccountsRequest)(nil),
		(*Request_SubscribeExchangeRatesListRequest)(nil),
		(*Request_UnsubscribeExchangeRatesListRequest)(nil),
		(*Request_SubscribeFlashExchangeOrdersRequest)(nil),
		(*Request_UnsubscribeFlashExchangeOrdersRequest)(nil),
	}
	file_websocket_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Response_Success)(nil),
		(*Response_Error)(nil),
		(*Response_Pong)(nil),
		(*Response_Heartbeat)(nil),
		(*Response_TickersSnapshot)(nil),
		(*Response_TickerUpdate)(nil),
		(*Response_TradesSnapshot)(nil),
		(*Response_TradeUpdate)(nil),
		(*Response_DepthSnapshot)(nil),
		(*Response_DepthUpdate)(nil),
		(*Response_AccountsSnapshot)(nil),
		(*Response_AccountUpdate)(nil),
		(*Response_CandlesSnapshot)(nil),
		(*Response_CandleUpdate)(nil),
		(*Response_OrdersSnapshot)(nil),
		(*Response_OrderUpdate)(nil),
		(*Response_ListMarketsResponse)(nil),
		(*Response_MarginAccountsSnapshot)(nil),
		(*Response_MarginAccountUpdate)(nil),
		(*Response_ExchangeRatesListSnapshot)(nil),
		(*Response_FlashExchangeOrdersSnapshot)(nil),
		(*Response_FlashExchangeOrderUpdate)(nil),
		(*Response_ExchangeRatesListUpdate)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_websocket_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   64,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_websocket_proto_goTypes,
		DependencyIndexes: file_websocket_proto_depIdxs,
		EnumInfos:         file_websocket_proto_enumTypes,
		MessageInfos:      file_websocket_proto_msgTypes,
	}.Build()
	File_websocket_proto = out.File
	file_websocket_proto_rawDesc = nil
	file_websocket_proto_goTypes = nil
	file_websocket_proto_depIdxs = nil
}
